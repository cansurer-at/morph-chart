{"version":3,"file":"index.js","sources":["../src/lib/math.ts","../node_modules/svg-arc-to-cubic-bezier/modules/index.js","../node_modules/normalize-svg-path/index.mjs","../src/lib/path.ts","../src/lib/dataLoader.ts","../src/lib/model.ts","../src/modules/header.tsx","../src/modules/labelButtons.tsx","../src/graph.tsx","../src/index.tsx"],"sourcesContent":["export interface Vector<T = number> {\n    x: T;\n    y: T;\n}\n\nexport const cubicBezier = (\n    t: number,\n    from: number,\n    c1: number,\n    c2: number,\n    to: number\n): number => {\n    \"worklet\";\n    const term = 1 - t;\n    const a = 1 * term ** 3 * t ** 0 * from;\n    const b = 3 * term ** 2 * t ** 1 * c1;\n    const c = 3 * term ** 1 * t ** 2 * c2;\n    const d = 1 * term ** 0 * t ** 3 * to;\n    return a + b + c + d;\n};\n\nexport const round = (value: number, precision = 0): number => {\n    \"worklet\";\n    const p = Math.pow(10, precision);\n    return Math.round(value * p) / p;\n};\n\nconst cuberoot = (x: number): number => {\n    \"worklet\";\n    const y = Math.pow(Math.abs(x), 1 / 3);\n    return x < 0 ? -y : y;\n};\n\nconst solveCubic = (a: number, b: number, c: number, d: number): number[] => {\n    \"worklet\";\n    if (Math.abs(a) < 1e-8) {\n        // Quadratic case, ax^2+bx+c=0\n        a = b;\n        b = c;\n        c = d;\n        if (Math.abs(a) < 1e-8) {\n            // Linear case, ax+b=0\n            a = b;\n            b = c;\n            if (Math.abs(a) < 1e-8) {\n                // Degenerate case\n                return [];\n            }\n            return [-b / a];\n        }\n\n        const D = b * b - 4 * a * c;\n        if (Math.abs(D) < 1e-8) {\n            return [-b / (2 * a)];\n        } else if (D > 0) {\n            return [\n                (-b + Math.sqrt(D)) / (2 * a),\n                (-b - Math.sqrt(D)) / (2 * a)\n            ];\n        }\n        return [];\n    }\n\n    // Convert to depressed cubic t^3+pt+q = 0 (subst x = t - b/3a)\n    const p = (3 * a * c - b * b) / (3 * a * a);\n    const q =\n        (2 * b * b * b - 9 * a * b * c + 27 * a * a * d) / (27 * a * a * a);\n    let roots;\n\n    if (Math.abs(p) < 1e-8) {\n        // p = 0 -> t^3 = -q -> t = -q^1/3\n        roots = [cuberoot(-q)];\n    } else if (Math.abs(q) < 1e-8) {\n        // q = 0 -> t^3 + pt = 0 -> t(t^2+p)=0\n        roots = [0].concat(p < 0 ? [Math.sqrt(-p), -Math.sqrt(-p)] : []);\n    } else {\n        const D = (q * q) / 4 + (p * p * p) / 27;\n        if (Math.abs(D) < 1e-8) {\n            // D = 0 -> two roots\n            roots = [(-1.5 * q) / p, (3 * q) / p];\n        } else if (D > 0) {\n            // Only one real root\n            const u = cuberoot(-q / 2 - Math.sqrt(D));\n            roots = [u - p / (3 * u)];\n        } else {\n            // D < 0, three roots, but needs to use complex numbers/trigonometric solution\n            const u = 2 * Math.sqrt(-p / 3);\n            const t = Math.acos((3 * q) / p / u) / 3; // D < 0 implies p < 0 and acos argument in [-1..1]\n            const k = (2 * Math.PI) / 3;\n            roots = [\n                u * Math.cos(t),\n                u * Math.cos(t - k),\n                u * Math.cos(t - 2 * k)\n            ];\n        }\n    }\n\n    // Convert back from depressed cubic\n    for (let i = 0; i < roots.length; i++) {\n        roots[i] -= b / (3 * a);\n    }\n\n    return roots;\n};\n\nexport const cubicBezierYForX = (\n    x: number,\n    a: Vector,\n    b: Vector,\n    c: Vector,\n    d: Vector,\n    precision = 2\n): number => {\n    \"worklet\";\n    const pa = -a.x + 3 * b.x - 3 * c.x + d.x;\n    const pb = 3 * a.x - 6 * b.x + 3 * c.x;\n    const pc = -3 * a.x + 3 * b.x;\n    const pd = a.x - x;\n    // eslint-disable-next-line prefer-destructuring\n    const t = solveCubic(pa, pb, pc, pd)\n        .map((root) => round(root, precision))\n        .filter((root) => root >= 0 && root <= 1)[0];\n    return cubicBezier(t, a.y, b.y, c.y, d.y);\n};\n\nexport const mapValues = (\n    value: number,\n    inputRange: number[],\n    outputRange: number[]\n): number => {\n    const leftSpan = inputRange[1] - inputRange[0];\n    const rightSpan = outputRange[1] - outputRange[0];\n\n    const valueScaled = (value - inputRange[0]) / leftSpan;\n    return outputRange[0] + valueScaled * rightSpan;\n};\n\nexport const relativePercent = (price: number, startPrice: number): number => {\n    const increase = price - startPrice;\n    const change = increase / startPrice;\n    return change;\n};\n","var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar TAU = Math.PI * 2;\n\nvar mapToEllipse = function mapToEllipse(_ref, rx, ry, cosphi, sinphi, centerx, centery) {\n  var x = _ref.x,\n      y = _ref.y;\n\n  x *= rx;\n  y *= ry;\n\n  var xp = cosphi * x - sinphi * y;\n  var yp = sinphi * x + cosphi * y;\n\n  return {\n    x: xp + centerx,\n    y: yp + centery\n  };\n};\n\nvar approxUnitArc = function approxUnitArc(ang1, ang2) {\n  // If 90 degree circular arc, use a constant\n  // as derived from http://spencermortensen.com/articles/bezier-circle\n  var a = ang2 === 1.5707963267948966 ? 0.551915024494 : ang2 === -1.5707963267948966 ? -0.551915024494 : 4 / 3 * Math.tan(ang2 / 4);\n\n  var x1 = Math.cos(ang1);\n  var y1 = Math.sin(ang1);\n  var x2 = Math.cos(ang1 + ang2);\n  var y2 = Math.sin(ang1 + ang2);\n\n  return [{\n    x: x1 - y1 * a,\n    y: y1 + x1 * a\n  }, {\n    x: x2 + y2 * a,\n    y: y2 - x2 * a\n  }, {\n    x: x2,\n    y: y2\n  }];\n};\n\nvar vectorAngle = function vectorAngle(ux, uy, vx, vy) {\n  var sign = ux * vy - uy * vx < 0 ? -1 : 1;\n\n  var dot = ux * vx + uy * vy;\n\n  if (dot > 1) {\n    dot = 1;\n  }\n\n  if (dot < -1) {\n    dot = -1;\n  }\n\n  return sign * Math.acos(dot);\n};\n\nvar getArcCenter = function getArcCenter(px, py, cx, cy, rx, ry, largeArcFlag, sweepFlag, sinphi, cosphi, pxp, pyp) {\n  var rxsq = Math.pow(rx, 2);\n  var rysq = Math.pow(ry, 2);\n  var pxpsq = Math.pow(pxp, 2);\n  var pypsq = Math.pow(pyp, 2);\n\n  var radicant = rxsq * rysq - rxsq * pypsq - rysq * pxpsq;\n\n  if (radicant < 0) {\n    radicant = 0;\n  }\n\n  radicant /= rxsq * pypsq + rysq * pxpsq;\n  radicant = Math.sqrt(radicant) * (largeArcFlag === sweepFlag ? -1 : 1);\n\n  var centerxp = radicant * rx / ry * pyp;\n  var centeryp = radicant * -ry / rx * pxp;\n\n  var centerx = cosphi * centerxp - sinphi * centeryp + (px + cx) / 2;\n  var centery = sinphi * centerxp + cosphi * centeryp + (py + cy) / 2;\n\n  var vx1 = (pxp - centerxp) / rx;\n  var vy1 = (pyp - centeryp) / ry;\n  var vx2 = (-pxp - centerxp) / rx;\n  var vy2 = (-pyp - centeryp) / ry;\n\n  var ang1 = vectorAngle(1, 0, vx1, vy1);\n  var ang2 = vectorAngle(vx1, vy1, vx2, vy2);\n\n  if (sweepFlag === 0 && ang2 > 0) {\n    ang2 -= TAU;\n  }\n\n  if (sweepFlag === 1 && ang2 < 0) {\n    ang2 += TAU;\n  }\n\n  return [centerx, centery, ang1, ang2];\n};\n\nvar arcToBezier = function arcToBezier(_ref2) {\n  var px = _ref2.px,\n      py = _ref2.py,\n      cx = _ref2.cx,\n      cy = _ref2.cy,\n      rx = _ref2.rx,\n      ry = _ref2.ry,\n      _ref2$xAxisRotation = _ref2.xAxisRotation,\n      xAxisRotation = _ref2$xAxisRotation === undefined ? 0 : _ref2$xAxisRotation,\n      _ref2$largeArcFlag = _ref2.largeArcFlag,\n      largeArcFlag = _ref2$largeArcFlag === undefined ? 0 : _ref2$largeArcFlag,\n      _ref2$sweepFlag = _ref2.sweepFlag,\n      sweepFlag = _ref2$sweepFlag === undefined ? 0 : _ref2$sweepFlag;\n\n  var curves = [];\n\n  if (rx === 0 || ry === 0) {\n    return [];\n  }\n\n  var sinphi = Math.sin(xAxisRotation * TAU / 360);\n  var cosphi = Math.cos(xAxisRotation * TAU / 360);\n\n  var pxp = cosphi * (px - cx) / 2 + sinphi * (py - cy) / 2;\n  var pyp = -sinphi * (px - cx) / 2 + cosphi * (py - cy) / 2;\n\n  if (pxp === 0 && pyp === 0) {\n    return [];\n  }\n\n  rx = Math.abs(rx);\n  ry = Math.abs(ry);\n\n  var lambda = Math.pow(pxp, 2) / Math.pow(rx, 2) + Math.pow(pyp, 2) / Math.pow(ry, 2);\n\n  if (lambda > 1) {\n    rx *= Math.sqrt(lambda);\n    ry *= Math.sqrt(lambda);\n  }\n\n  var _getArcCenter = getArcCenter(px, py, cx, cy, rx, ry, largeArcFlag, sweepFlag, sinphi, cosphi, pxp, pyp),\n      _getArcCenter2 = _slicedToArray(_getArcCenter, 4),\n      centerx = _getArcCenter2[0],\n      centery = _getArcCenter2[1],\n      ang1 = _getArcCenter2[2],\n      ang2 = _getArcCenter2[3];\n\n  // If 'ang2' == 90.0000000001, then `ratio` will evaluate to\n  // 1.0000000001. This causes `segments` to be greater than one, which is an\n  // unecessary split, and adds extra points to the bezier curve. To alleviate\n  // this issue, we round to 1.0 when the ratio is close to 1.0.\n\n\n  var ratio = Math.abs(ang2) / (TAU / 4);\n  if (Math.abs(1.0 - ratio) < 0.0000001) {\n    ratio = 1.0;\n  }\n\n  var segments = Math.max(Math.ceil(ratio), 1);\n\n  ang2 /= segments;\n\n  for (var i = 0; i < segments; i++) {\n    curves.push(approxUnitArc(ang1, ang2));\n    ang1 += ang2;\n  }\n\n  return curves.map(function (curve) {\n    var _mapToEllipse = mapToEllipse(curve[0], rx, ry, cosphi, sinphi, centerx, centery),\n        x1 = _mapToEllipse.x,\n        y1 = _mapToEllipse.y;\n\n    var _mapToEllipse2 = mapToEllipse(curve[1], rx, ry, cosphi, sinphi, centerx, centery),\n        x2 = _mapToEllipse2.x,\n        y2 = _mapToEllipse2.y;\n\n    var _mapToEllipse3 = mapToEllipse(curve[2], rx, ry, cosphi, sinphi, centerx, centery),\n        x = _mapToEllipse3.x,\n        y = _mapToEllipse3.y;\n\n    return { x1: x1, y1: y1, x2: x2, y2: y2, x: x, y: y };\n  });\n};\n\nexport default arcToBezier;","import arcToCurve from 'svg-arc-to-cubic-bezier'\r\n\r\nexport default function normalize(path){\r\n  // init state\r\n  var prev\r\n  var result = []\r\n  var bezierX = 0\r\n  var bezierY = 0\r\n  var startX = 0\r\n  var startY = 0\r\n  var quadX = null\r\n  var quadY = null\r\n  var x = 0\r\n  var y = 0\r\n\r\n  for (var i = 0, len = path.length; i < len; i++) {\r\n    var seg = path[i]\r\n    var command = seg[0]\r\n\r\n    switch (command) {\r\n      case 'M':\r\n        startX = seg[1]\r\n        startY = seg[2]\r\n        break\r\n      case 'A':\r\n        var curves = arcToCurve({\r\n          px: x,\r\n          py: y,\r\n          cx: seg[6],\r\n          cy:  seg[7],\r\n          rx: seg[1],\r\n          ry: seg[2],\r\n          xAxisRotation: seg[3],\r\n          largeArcFlag: seg[4],\r\n          sweepFlag: seg[5]\r\n        })\r\n\r\n        // null-curves\r\n        if (!curves.length) continue\r\n\r\n        for (var j = 0, c; j < curves.length; j++) {\r\n          c = curves[j]\r\n          seg = ['C', c.x1, c.y1, c.x2, c.y2, c.x, c.y]\r\n          if (j < curves.length - 1) result.push(seg)\r\n        }\r\n\r\n        break\r\n      case 'S':\r\n        // default control point\r\n        var cx = x\r\n        var cy = y\r\n        if (prev == 'C' || prev == 'S') {\r\n          cx += cx - bezierX // reflect the previous command's control\r\n          cy += cy - bezierY // point relative to the current point\r\n        }\r\n        seg = ['C', cx, cy, seg[1], seg[2], seg[3], seg[4]]\r\n        break\r\n      case 'T':\r\n        if (prev == 'Q' || prev == 'T') {\r\n          quadX = x * 2 - quadX // as with 'S' reflect previous control point\r\n          quadY = y * 2 - quadY\r\n        } else {\r\n          quadX = x\r\n          quadY = y\r\n        }\r\n        seg = quadratic(x, y, quadX, quadY, seg[1], seg[2])\r\n        break\r\n      case 'Q':\r\n        quadX = seg[1]\r\n        quadY = seg[2]\r\n        seg = quadratic(x, y, seg[1], seg[2], seg[3], seg[4])\r\n        break\r\n      case 'L':\r\n        seg = line(x, y, seg[1], seg[2])\r\n        break\r\n      case 'H':\r\n        seg = line(x, y, seg[1], y)\r\n        break\r\n      case 'V':\r\n        seg = line(x, y, x, seg[1])\r\n        break\r\n      case 'Z':\r\n        seg = line(x, y, startX, startY)\r\n        break\r\n    }\r\n\r\n    // update state\r\n    prev = command\r\n    x = seg[seg.length - 2]\r\n    y = seg[seg.length - 1]\r\n    if (seg.length > 4) {\r\n      bezierX = seg[seg.length - 4]\r\n      bezierY = seg[seg.length - 3]\r\n    } else {\r\n      bezierX = x\r\n      bezierY = y\r\n    }\r\n    result.push(seg)\r\n  }\r\n\r\n  return result\r\n}\r\n\r\nfunction line(x1, y1, x2, y2){\r\n  return ['C', x1, y1, x2, y2, x2, y2]\r\n}\r\n\r\nfunction quadratic(x1, y1, cx, cy, x2, y2){\r\n  return [\r\n    'C',\r\n    x1/3 + (2/3) * cx,\r\n    y1/3 + (2/3) * cy,\r\n    x2/3 + (2/3) * cx,\r\n    y2/3 + (2/3) * cy,\r\n    x2,\r\n    y2\r\n  ]\r\n}\r\n","import { Vector, cubicBezierYForX } from \"./math\";\nimport parseSVG from \"parse-svg-path\";\nimport absSVG from \"abs-svg-path\";\nimport normalize from \"normalize-svg-path\";\n\ntype SVGCloseCommand = [\"Z\"];\ntype SVGMoveCommand = [\"M\", number, number];\ntype SVGCurveCommand = [\"C\", number, number, number, number, number, number];\ntype SVGNormalizedCommands = [\n    SVGMoveCommand,\n    ...(SVGCurveCommand | SVGCloseCommand)[]\n];\n\ninterface Curve {\n    to: Vector;\n    c1: Vector;\n    c2: Vector;\n}\n\nexport type Path = {\n    move: Vector;\n    curves: Curve[];\n    close: boolean;\n};\n\nexport const createPath = (move: Vector): Path => {\n    return {\n        move,\n        curves: [],\n        close: false\n    };\n};\n\nexport const close = (path: Path): void => {\n    path.close = true;\n};\n\nexport const addCurve = (path: Path, c: Curve): void => {\n    path.curves.push({\n        c1: c.c1,\n        c2: c.c2,\n        to: c.to\n    });\n};\n\nexport const parse = (d: string): Path => {\n    const segments: SVGNormalizedCommands = normalize(absSVG(parseSVG(d)));\n    const path = createPath({ x: segments[0][1], y: segments[0][2] });\n    segments.forEach((segment) => {\n        if (segment[0] === \"Z\") {\n            close(path);\n        } else if (segment[0] === \"C\") {\n            addCurve(path, {\n                c1: {\n                    x: segment[1],\n                    y: segment[2]\n                },\n                c2: {\n                    x: segment[3],\n                    y: segment[4]\n                },\n                to: {\n                    x: segment[5],\n                    y: segment[6]\n                }\n            });\n        }\n    });\n    return path;\n};\n\ninterface SelectedCurve {\n    from: Vector;\n    curve: Curve;\n}\n\ninterface NullableSelectedCurve {\n    from: Vector;\n    curve: Curve | null;\n}\n\nconst curveIsFound = (c: NullableSelectedCurve): c is SelectedCurve => {\n    \"worklet\";\n    return c.curve !== null;\n};\n\nexport const selectCurve = (path: Path, x: number): SelectedCurve => {\n    \"worklet\";\n    const result: NullableSelectedCurve = {\n        from: path.move,\n        curve: null\n    };\n    for (let i = 0; i < path.curves.length; i++) {\n        const c = path.curves[i];\n        const contains =\n            result.from.x > c.to.x\n                ? x >= c.to.x && x <= result.from.x\n                : x >= result.from.x && x <= c.to.x;\n        if (contains) {\n            result.curve = c;\n            break;\n        }\n        result.from = c.to;\n    }\n    if (!curveIsFound(result)) {\n        throw new Error(`No curve found at ${x}`);\n    }\n    return result;\n};\n\nexport const getYForX = (path: Path, x: number, precision = 2): number => {\n    const c = selectCurve(path, x);\n    return cubicBezierYForX(\n        x,\n        c.from,\n        c.curve.c1,\n        c.curve.c2,\n        c.curve.to,\n        precision\n    );\n};\n","import { ChartData, DataPoints, HeaderConfig } from \"../types/types\";\n\nconst defaultHeader = {\n    currentValue: {\n        display: true,\n        update: true,\n        prefix: \"\",\n        suffix: \"\"\n    },\n    percentageChange: {\n        display: true,\n        update: true\n    },\n    labels: {\n        display: true,\n        update: true\n    }\n} as HeaderConfig;\n\nconst defaultCursor = {\n    display: true,\n    cursorColor: \"black\",\n    lineColor: \"black\"\n};\n\nexport default class DataLoader {\n    chartLabels: string[] | null;\n    chartData: DataPoints[];\n    title?: string;\n    graphColor: string;\n    buttonColor?: string;\n    header: HeaderConfig;\n    cursor: {\n        display: boolean;\n        lineColor: string | null;\n        cursorColor: string | null;\n    };\n\n    currentValueDisplayPrefix: string;\n    partialGraph: boolean;\n\n    /**\n     * Assign default values if not given\n     */\n    constructor({\n        chartLabels,\n        chartData,\n        title = undefined,\n        graphColor = \"black\",\n        buttonColor = \"black\",\n        header = defaultHeader,\n        cursor = defaultCursor,\n        currentValueDisplayPrefix = \"\",\n        partialGraph = false\n    }: ChartData) {\n        this.throwErrorOnInvalidParameters({\n            chartLabels,\n            chartData,\n            title,\n            graphColor,\n            buttonColor,\n            header,\n            cursor,\n            currentValueDisplayPrefix,\n            partialGraph\n        });\n\n        this.chartLabels = chartLabels;\n        this.chartData = chartData;\n        this.title = title;\n        this.graphColor = graphColor;\n        this.buttonColor = buttonColor;\n        this.header = header;\n        this.cursor = cursor;\n        this.currentValueDisplayPrefix = currentValueDisplayPrefix;\n        this.partialGraph = partialGraph;\n    }\n\n    throwErrorOnInvalidParameters = (data: ChartData): void => {\n        data.chartData.forEach((data) => {\n            data.points.forEach((point) => {\n                if (typeof point.value !== \"number\") {\n                    throw new Error(\"Invalid value type for datapoint\" + point);\n                }\n            });\n        });\n\n        if (data.chartLabels) {\n            if (\n                data.chartLabels.length > 0 &&\n                data.chartLabels.length !== data.chartData.length\n            ) {\n                throw new Error(\n                    `Length of chart labels not matching length of data. Expected ${data.chartData.length} labels only got ${data.chartLabels.length}.`\n                );\n            }\n        }\n\n        const header = data.header;\n        if (header!.currentValue.update && !header!.currentValue.display) {\n            throw new Error(\n                \"updateCurrentValue cannot be true if displayCurrentValue is false or undefined.\"\n            );\n        }\n\n        if (\n            header!.percentageChange.update &&\n            !header!.percentageChange.display\n        ) {\n            throw new Error(\n                \"updatePercentageChange cannot be true if displayPercentageChange is false or undefined.\"\n            );\n        }\n    };\n}\n","import * as shape from \"d3-shape\";\nimport { scaleLinear } from \"d3-scale\";\nimport { ChartData, DataPoint, DataPoints } from \"../types/types\";\nimport { getYForX, parse, Path } from \"./path\";\nimport { interpolatePath } from \"d3-interpolate-path\";\nimport { mapValues, relativePercent } from \"./math\";\nimport React from \"react\";\nimport DataLoader from \"./dataLoader\";\nconst d3 = require(\"d3\");\n\ntype PathData = {\n    minPrice: number;\n    maxPrice: number;\n    datapoints: DataPoints;\n    path: string;\n};\n\nexport default class ChartModel {\n    data: ChartData;\n    width: number;\n    height: number;\n    state: number;\n    pathData: PathData;\n    parsedPath: Path;\n    morphing: boolean;\n    /**\n     *\n     */\n    constructor(\n        _data: ChartData,\n        _width: number,\n        _height: number,\n        _state: number\n    ) {\n        this.data = new DataLoader(_data);\n        this.width = _width;\n        this.height = _height;\n        this.state = _state;\n        this.morphing = false;\n\n        this.pathData = this.calcPath();\n        this.parsedPath = parse(this.pathData.path);\n    }\n\n    calcPath = (): PathData => {\n        const datapoints = this.data.chartData[this.state];\n        // Parse string to float\n        const formattedValues = datapoints.points.map(\n            (datapoint, index) => [datapoint.value, index] as [number, number]\n        );\n\n        // Split formattedValues to prices and dates array\n        const prices = formattedValues.map((value) => value[0]);\n        const indices = formattedValues.map((value) => value[1]);\n\n        // scales min_date-max_date to 0-SIZE\n        // data_points - max_data_points -> 0 - width\n        let relDataPoints = 1;\n        if (datapoints.maxDataPoints !== undefined) {\n            const maxDataPoints = datapoints.maxDataPoints;\n            const dataPoints = datapoints.points.length;\n            relDataPoints = dataPoints / maxDataPoints;\n        }\n\n        const scaleX = scaleLinear()\n            .domain([Math.min(...indices), Math.max(...indices)])\n            .range([0, this.width * relDataPoints]);\n\n        const minPrice = Math.min(...prices);\n        const maxPrice = Math.max(...prices);\n        // scales min_prices-max_price to SIZE-0 (flipped range)\n        const scaleY = scaleLinear()\n            .domain([minPrice, maxPrice])\n            .range([this.height - 10, 10]);\n\n        return {\n            minPrice,\n            maxPrice,\n            datapoints: datapoints,\n            path: shape\n                .line()\n                .x(([, x]) => scaleX(x) as number)\n                .y(([y]) => scaleY(y) as number)\n                .curve(shape.curveCatmullRom.alpha(0.2))(\n                formattedValues\n            ) as string\n        };\n    };\n\n    changeState = (\n        state: number,\n        morph: boolean | undefined,\n        ref: React.RefObject<SVGPathElement>\n    ): void => {\n        this.state = state;\n\n        if (morph === true) {\n            const previous = this.pathData.path;\n            const interpolatedPathData = this.getInterpolatedPath();\n\n            this.morphPath(previous, interpolatedPathData, state, ref);\n        }\n\n        this.pathData = this.calcPath();\n        this.parsedPath = parse(this.pathData.path);\n    };\n\n    morphPath = (\n        oldPath: string,\n        newPath: (t: number) => string,\n        newState: number,\n        graphRef: React.RefObject<SVGPathElement>\n    ): void => {\n        d3.select(graphRef.current)\n            .attr(\"d\", oldPath)\n            .transition()\n            .duration(1000)\n            .attrTween(\"d\", () => newPath)\n            .on(\"start\", () => {\n                this.morphing = true;\n            })\n            .on(\"end\", () => {\n                this.state = newState;\n                this.morphing = false;\n            });\n    };\n\n    getInterpolatedPath = (): ((t: number) => string) => {\n        const current = this.calcPath();\n        return interpolatePath(this.pathData.path, current.path);\n    };\n\n    getXYValues = (\n        xPosition: number,\n        maxDataPoints: number\n    ): {\n        dataPointsIndex: number;\n        xValue: number;\n        yValue: number;\n    } => {\n        const dataPointsIndex = Math.abs(\n            Math.round(\n                mapValues(xPosition, [0, this.width], [0, maxDataPoints - 1])\n            )\n        );\n\n        if (dataPointsIndex >= this.data.chartData[this.state].points.length) {\n            return { dataPointsIndex: -1, xValue: -1, yValue: -1 };\n        }\n\n        const xValue = mapValues(\n            dataPointsIndex,\n            [0, maxDataPoints - 1],\n            [0, this.width]\n        );\n\n        const yValue =\n            this.data.chartData[this.state].points[dataPointsIndex].value;\n        const yCord = mapValues(\n            yValue,\n            [this.pathData.minPrice, this.pathData.maxPrice],\n            [this.height - 10, 10]\n        );\n\n        return { dataPointsIndex, xValue, yValue: yCord };\n    };\n\n    getYOnGraph = (x: number): number => {\n        try {\n            return getYForX(this.parsedPath, x);\n        } catch (error) {\n            return -1;\n        }\n    };\n\n    getMaxDataPoints = (): number => {\n        const currentDPs = this.data.chartData[this.state];\n        if (currentDPs.maxDataPoints === undefined) {\n            return currentDPs.points.length;\n        } else {\n            return currentDPs.maxDataPoints;\n        }\n    };\n\n    getPercentChangeFromIndex = (index: number): number => {\n        const firstValue = this.getDataPointByIndex(0).value;\n        const secondValue = this.getDataPointByIndex(index).value;\n\n        const percentChange = relativePercent(secondValue, firstValue);\n        return Math.round(percentChange * 10000) / 100;\n    };\n\n    getLatestDataPoint = (): DataPoint => {\n        const pointsLength = this.data.chartData[this.state].points.length;\n        return this.data.chartData[this.state].points[pointsLength - 1];\n    };\n\n    getDataPointByIndex = (index: number): DataPoint => {\n        return this.data.chartData[this.state].points[index];\n    };\n\n    getDataPointsLength = (): number => {\n        return this.data.chartData[this.state].points.length;\n    };\n}\n","import React from \"react\";\nimport { DynamicHeaderData } from \"../types/types\";\nimport styles from \"../styles.module.css\";\n\ninterface HeaderProps {\n    headerConfig: any;\n    headerData: DynamicHeaderData;\n}\n\nexport const Header: React.FC<HeaderProps> = ({ headerConfig, headerData }) => {\n    return (\n        <div>\n            <h1 className={styles.title}>{headerData.title}</h1>\n            {!headerConfig.currentValue.display ? null : (\n                <h1 className={styles.dpValue}>{headerData.dataPointValue}</h1>\n            )}\n            {!headerConfig.percentageChange.display &&\n            !headerConfig.labels.display ? null : (\n                <div>\n                    <p className={styles.percentChange}>\n                        {headerConfig.percentageChange.display\n                            ? `${headerData.percentChange}%`\n                            : null}\n                    </p>\n                    <p className={styles.label}>\n                        {headerConfig.labels.display ? headerData.label : null}\n                    </p>\n                </div>\n            )}\n        </div>\n    );\n};\n","import React from \"react\";\nimport ChartModel from \"../lib/model\";\nimport styles from \"../styles.module.css\";\n\ninterface LabelButtonsProps {\n    chartLabels: string[] | null;\n    chartModel: ChartModel;\n    handleChartChangeClick: Function;\n}\n\nexport const LabelButtons: React.FC<LabelButtonsProps> = ({\n    chartLabels,\n    chartModel,\n    handleChartChangeClick\n}) => {\n    return (\n        <div>\n            {chartLabels === null ? null : (\n                <div className={styles.buttonContainer}>\n                    {chartLabels.map((value, index) => (\n                        <button\n                            style={\n                                index === chartModel?.state\n                                    ? {\n                                          borderBottomWidth: 3,\n                                          borderColor:\n                                              chartModel.data.buttonColor,\n                                          borderStyle: \"solid\"\n                                      }\n                                    : {}\n                            }\n                            key={index}\n                            onClick={() => handleChartChangeClick(index)}\n                        >\n                            {value}\n                        </button>\n                    ))}\n                </div>\n            )}\n        </div>\n    );\n};\n","import React, { useEffect, useRef, useState } from \"react\";\nimport ChartModel from \"./lib/model\";\nimport { Header } from \"./modules/header\";\nimport { LabelButtons } from \"./modules/labelButtons\";\nimport styles from \"./styles.module.css\";\nimport { ChartCursor, DynamicHeaderData } from \"./types/types\";\n\ninterface ChartProps {\n    chartModel: ChartModel;\n    children?: (headerData: DynamicHeaderData) => React.ReactNode;\n}\n\nconst HEADER_HEIGHT = 100;\n\nfunction useForceUpdate() {\n    const [value, setValue] = useState(0);\n    return () => setValue(value + 1);\n}\n\nexport const Graph: React.FC<ChartProps> = ({ chartModel, children }) => {\n    const [chartCursor, setChartCursor] = useState({\n        x: 0,\n        y: 0,\n        show: false\n    } as ChartCursor);\n    const [headerData, setHeaderData] = useState({\n        dataPointValue: null,\n        percentChange: null,\n        label: null\n    } as DynamicHeaderData);\n    const graphRef = useRef(null);\n    const forceUpdate = useForceUpdate();\n\n    useEffect(() => {\n        if (headerData.dataPointValue === null) {\n            setHeaderData({\n                title: chartModel.data.title,\n                dataPointValue: chartModel.getLatestDataPoint().value,\n                percentChange: chartModel.getPercentChangeFromIndex(\n                    chartModel.getDataPointsLength() - 1\n                ),\n                label: chartModel.getLatestDataPoint().label\n            });\n        }\n    });\n\n    const handleChartChangeClick = (state: number) => {\n        chartModel.changeState(state, true, graphRef);\n        forceUpdate();\n    };\n\n    const handleMouseLeave = () => {\n        changeHeaderData(chartModel.getDataPointsLength());\n        setChartCursor({\n            x: 0,\n            y: 0,\n            show: false\n        });\n    };\n\n    const handleMouseMove = (event: React.MouseEvent) => {\n        if (chartModel.morphing || !chartModel.data.cursor?.display) return;\n\n        const maxDataPoints = chartModel.getMaxDataPoints();\n        const { dataPointsIndex, xValue, yValue } = chartModel.getXYValues(\n            event.nativeEvent.offsetX,\n            maxDataPoints\n        );\n\n        changeHeaderData(dataPointsIndex);\n        setChartCursor({\n            x: xValue,\n            y: yValue,\n            show: yValue !== -1\n        });\n    };\n\n    const changeHeaderData = (index: number) => {\n        if (index < chartModel.getDataPointsLength() && index >= 0) {\n            let dpValue = headerData.dataPointValue;\n            let pcValue = headerData.percentChange;\n            let dpLabel = headerData.label;\n\n            const headerConfig = chartModel.data.header!;\n\n            if (headerConfig.currentValue.update) {\n                dpValue = chartModel.getDataPointByIndex(index).value;\n            }\n            if (headerConfig.percentageChange.update) {\n                pcValue = chartModel.getPercentChangeFromIndex(index);\n            }\n            if (headerConfig.labels.update) {\n                dpLabel = chartModel.getDataPointByIndex(index).label;\n            }\n\n            setHeaderData((data) => ({\n                title: data.title,\n                dataPointValue: dpValue,\n                percentChange: pcValue,\n                label: dpLabel\n            }));\n        }\n    };\n\n    const headerConfig = chartModel.data.header!;\n    const chartLabels = chartModel.data.chartLabels;\n\n    return (\n        <div\n            className={styles.chartContainer}\n            style={{ width: chartModel.width }}\n        >\n            <div style={{ maxHeight: HEADER_HEIGHT }} className=\"header\">\n                {children === undefined ? (\n                    <Header\n                        headerData={headerData}\n                        headerConfig={headerConfig}\n                    />\n                ) : (\n                    children(headerData)\n                )}\n            </div>\n            <svg\n                width={chartModel.width}\n                height={chartModel.height}\n                onMouseMove={handleMouseMove}\n                onMouseLeave={handleMouseLeave}\n                className={styles.graph}\n            >\n                <path\n                    d={\n                        chartModel.pathData.path !== null\n                            ? chartModel.pathData.path\n                            : \"\"\n                    }\n                    style={{\n                        fill: \"transparent\",\n                        stroke: chartModel.data.graphColor,\n                        strokeWidth: 3\n                    }}\n                    ref={graphRef}\n                />\n                <circle\n                    cx={chartCursor.x}\n                    cy={chartCursor.y}\n                    r={chartCursor.show ? 6 : 0}\n                    stroke=\"white\"\n                    strokeWidth={2}\n                    fill={chartModel.data.cursor?.cursorColor || \"\"}\n                />\n                <line\n                    strokeWidth={chartCursor.show ? 1.5 : 0}\n                    x1={chartCursor.x}\n                    y1={chartModel.height}\n                    x2={chartCursor.x}\n                    y2={chartCursor.y}\n                    stroke={chartModel.data.cursor?.lineColor || \"\"}\n                    opacity={0.7}\n                />\n            </svg>\n            <LabelButtons\n                chartLabels={chartLabels}\n                chartModel={chartModel}\n                handleChartChangeClick={handleChartChangeClick}\n            />\n        </div>\n    );\n};\n","import React from \"react\";\nimport ChartModel from \"./lib/model\";\nimport { Graph } from \"./graph\";\nimport { ChartData, DynamicHeaderData } from \"./types/types\";\n\ntype ChartProps = {\n    width: number;\n    height: number;\n    data: ChartData;\n    \n    children?: (headerData: DynamicHeaderData) => React.ReactNode;\n};\n\nconst Chart = ({ width, height, data, children }: ChartProps) => {\n    const chartModel = new ChartModel(data, width, height, 0);\n\n    return <Graph chartModel={chartModel} children={children} />;\n};\n\nexport default Chart;\n"],"names":["cubicBezier","t","from","c1","c2","to","term","a","b","c","d","round","value","precision","p","Math","pow","cuberoot","x","y","abs","solveCubic","D","sqrt","q","roots","concat","u","acos","k","PI","cos","i","length","cubicBezierYForX","pa","pb","pc","pd","map","root","filter","mapValues","inputRange","outputRange","leftSpan","rightSpan","valueScaled","relativePercent","price","startPrice","increase","change","arcToCurve","createPath","move","curves","close","path","addCurve","push","parse","segments","normalize","absSVG","parseSVG","forEach","segment","curveIsFound","curve","selectCurve","result","contains","Error","getYForX","defaultHeader","currentValue","display","update","prefix","suffix","percentageChange","labels","defaultCursor","cursorColor","lineColor","DataLoader","chartLabels","chartData","title","undefined","graphColor","buttonColor","header","cursor","currentValueDisplayPrefix","partialGraph","data","points","point","throwErrorOnInvalidParameters","d3","require","ChartModel","_data","_width","_height","_state","datapoints","state","formattedValues","datapoint","index","prices","indices","relDataPoints","maxDataPoints","dataPoints","scaleX","scaleLinear","domain","min","max","range","width","minPrice","maxPrice","scaleY","height","shape","alpha","morph","ref","previous","pathData","interpolatedPathData","getInterpolatedPath","morphPath","calcPath","parsedPath","oldPath","newPath","newState","graphRef","select","current","attr","transition","duration","attrTween","on","morphing","interpolatePath","xPosition","dataPointsIndex","xValue","yValue","yCord","error","currentDPs","firstValue","getDataPointByIndex","secondValue","percentChange","pointsLength","Header","headerConfig","headerData","React","className","styles","dpValue","dataPointValue","label","LabelButtons","chartModel","handleChartChangeClick","buttonContainer","style","borderBottomWidth","borderColor","borderStyle","key","onClick","HEADER_HEIGHT","useForceUpdate","useState","setValue","Graph","children","show","chartCursor","setChartCursor","setHeaderData","useRef","forceUpdate","useEffect","getLatestDataPoint","getPercentChangeFromIndex","getDataPointsLength","changeState","handleMouseLeave","changeHeaderData","handleMouseMove","event","getMaxDataPoints","getXYValues","nativeEvent","offsetX","pcValue","dpLabel","chartContainer","maxHeight","onMouseMove","onMouseLeave","graph","fill","stroke","strokeWidth","cx","cy","r","x1","y1","x2","y2","opacity","Chart"],"mappings":"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"}