{"version":3,"sources":["../../src/lib/math.ts","../../node_modules/svg-arc-to-cubic-bezier/modules/index.js","../../node_modules/normalize-svg-path/index.mjs","../../src/lib/path.ts","../../src/lib/dataLoader.ts","../../src/lib/model.ts","../../src/modules/header.tsx","../../src/modules/labelButtons.tsx","../../src/graph.tsx","../../src/index.tsx","graphData.ts","App.tsx","index.tsx"],"names":["cuberoot","x","y","Math","cubicBezierYForX","precision","term","cubicBezier","a","b","c","D","p","q","roots","concat","u","t","k","i","solveCubic","d","value","round","root","mapValues","leftSpan","inputRange","rightSpan","outputRange","valueScaled","_slicedToArray","arr","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","length","err","sliceIterator","TypeError","TAU","PI","mapToEllipse","_ref","rx","ry","cosphi","sinphi","centerx","centery","approxUnitArc","ang1","ang2","tan","x1","cos","y1","sin","x2","y2","vectorAngle","ux","uy","vx","vy","dot","acos","arcToBezier","_ref2","px","py","cx","cy","_ref2$xAxisRotation","xAxisRotation","_ref2$largeArcFlag","largeArcFlag","_ref2$sweepFlag","sweepFlag","curves","pxp","pyp","abs","lambda","pow","sqrt","_getArcCenter","rxsq","rysq","pxpsq","pypsq","radicant","centerxp","centeryp","vx1","vy1","vx2","vy2","getArcCenter","_getArcCenter2","ratio","segments","max","ceil","map","curve","_mapToEllipse","_mapToEllipse2","_mapToEllipse3","quadratic","parse","path","prev","result","bezierX","bezierY","startX","startY","quadX","quadY","len","seg","command","arcToCurve","j","normalize","absSVG","parseSVG","move","close","segment","c1","c2","to","addCurve","getYForX","from","curveIsFound","Error","selectCurve","defaultHeader","currentValue","display","update","prefix","suffix","percentageChange","labels","defaultCursor","cursorColor","lineColor","DataLoader","chartLabels","chartData","title","graphColor","header","cursor","currentValueDisplayPrefix","partialGraph","throwErrorOnInvalidParameters","data","point","this","d3","require","ChartModel","calcPath","datapoints","formattedValues","datapoint","prices","indices","relDataPoints","maxDataPoints","scaleX","scaleLinear","minPrice","maxPrice","scaleY","shape","changeState","morph","previous","interpolatedPathData","morphPath","graphRef","getInterpolatedPath","current","interpolatePath","getXYValues","dataPointsIndex","xPosition","xValue","yValue","getYOnGraph","error","getMaxDataPoints","currentDPs","getPercentChangeFromIndex","firstValue","secondValue","percentChange","getLatestDataPoint","pointsLength","getDataPointByIndex","getDataPointsLength","pathData","Header","headerConfig","headerData","React","className","styles","LabelButtons","chartModel","handleChartChangeClick","index","key","onClick","Graph","children","useState","show","chartCursor","setChartCursor","dataPointValue","label","setHeaderData","useRef","forceUpdate","setValue","useForceUpdate","useEffect","changeHeaderData","dpValue","pcValue","dpLabel","style","width","maxHeight","height","onMouseMove","event","onMouseLeave","fill","stroke","strokeWidth","ref","r","opacity","state","points","App","ReactDOM","render","document","getElementById"],"mappings":"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ACIzN,MAAO,MACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,MACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,MACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,IACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,MACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,MACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,mBAInB,CACIrD,cAAe,IACf8E,OAAQ,CACJ,CACIlP,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,MACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,MACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,IACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,MACPyN,MAAO,iBAEX,CACIzN,MAAO,MACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,MACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,MACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,MACPyN,MAAO,iBAEX,CACIzN,MAAO,MACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,MACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,MACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,MACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,MACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,MACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,iBAEX,CACIzN,MAAO,OACPyN,MAAO,mBAInB,CACIrD,cAAe,GACf8E,OAAQ,CACJ,CACIlP,MAAO,OACPyN,MAAO,eAEX,CACIzN,MAAO,OACPyN,MAAO,eAEX,CACIzN,MAAO,OACPyN,MAAO,eAEX,CACIzN,MAAO,OACPyN,MAAO,eAEX,CACIzN,MAAO,OACPyN,MAAO,eAEX,CACIzN,MAAO,OACPyN,MAAO,eAEX,CACIzN,MAAO,OACPyN,MAAO,eAEX,CACIzN,MAAO,IACPyN,MAAO,eAEX,CACIzN,MAAO,OACPyN,MAAO,eAEX,CACIzN,MAAO,OACPyN,MAAO,eAEX,CACIzN,MAAO,OACPyN,MAAO,eAEX,CACIzN,MAAO,MACPyN,MAAO,eAEX,CACIzN,MAAO,IACPyN,MAAO,eAEX,CACIzN,MAAO,OACPyN,MAAO,eAEX,CACIzN,MAAO,OACPyN,MAAO,eAEX,CACIzN,MAAO,OACPyN,MAAO,eAEX,CACIzN,MAAO,OACPyN,MAAO,eAEX,CACIzN,MAAO,MACPyN,MAAO,eAEX,CACIzN,MAAO,OACPyN,MAAO,eAEX,CACIzN,MAAO,OACPyN,MAAO,eAEX,CACIzN,MAAO,OACPyN,MAAO,eAEX,CACIzN,MAAO,OACPyN,MAAO,eAEX,CACIzN,MAAO,OACPyN,MAAO,eAEX,CACIzN,MAAO,OACPyN,MAAO,eAEX,CACIzN,MAAO,OACPyN,MAAO,eAEX,CACIzN,MAAO,OACPyN,MAAO,eAEX,CACIzN,MAAO,OACPyN,MAAO,eAEX,CACIzN,MAAO,OACPyN,MAAO,eAEX,CACIzN,MAAO,OACPyN,MAAO,eAEX,CACIzN,MAAO,MACPyN,MAAO,eAEX,CACIzN,MAAO,OACPyN,MAAO,eAEX,CACIzN,MAAO,OACPyN,MAAO,eAEX,CACIzN,MAAO,OACPyN,MAAO,eAEX,CACIzN,MAAO,OACPyN,MAAO,eAEX,CACIzN,MAAO,OACPyN,MAAO,eAEX,CACIzN,MAAO,OACPyN,MAAO,eAEX,CACIzN,MAAO,OACPyN,MAAO,eAEX,CACIzN,MAAO,OACPyN,MAAO,eAEX,CACIzN,MAAO,MACPyN,MAAO,eAEX,CACIzN,MAAO,OACPyN,MAAO,eAEX,CACIzN,MAAO,OACPyN,MAAO,eAEX,CACIzN,MAAO,OACPyN,MAAO,eAEX,CACIzN,MAAO,MACPyN,MAAO,eAEX,CACIzN,MAAO,OACPyN,MAAO,eAEX,CACIzN,MAAO,OACPyN,MAAO,eAEX,CACIzN,MAAO,OACPyN,MAAO,eAEX,CACIzN,MAAO,OACPyN,MAAO,eAEX,CACIzN,MAAO,OACPyN,MAAO,eAEX,CACIzN,MAAO,OACPyN,MAAO,eAEX,CACIzN,MAAO,OACPyN,MAAO,kBAKvBvE,OAAQ,CACJf,aAAc,CACVC,SAAS,EACTC,QAAQ,GAEZG,iBAAkB,CACdJ,SAAS,GAEbK,OAAQ,CACJL,SAAS,EACTC,QAAQ,IAGhBc,OAAQ,CACJf,SAAS,EACTQ,UAAW,QACXD,YAAa,SAEjBU,cAAc,EACdL,MAAO,OACPC,WAAY,kBCtxCDkG,EAbH,WAER,OACI,kBAAC,EAAD,CAAOd,MAAO,IAAKE,OAAQ,IAAKhF,KAAMA,IACjC,SAACiD,GAAD,OACG,6BACKA,EAAWxD,MADhB,MAC0BwD,EAAWgB,oBCLrD4B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.b65ed629.chunk.js","sourcesContent":["export interface Vector<T = number> {\n    x: T;\n    y: T;\n}\n\nexport const cubicBezier = (\n    t: number,\n    from: number,\n    c1: number,\n    c2: number,\n    to: number\n): number => {\n    \"worklet\";\n    const term = 1 - t;\n    const a = 1 * term ** 3 * t ** 0 * from;\n    const b = 3 * term ** 2 * t ** 1 * c1;\n    const c = 3 * term ** 1 * t ** 2 * c2;\n    const d = 1 * term ** 0 * t ** 3 * to;\n    return a + b + c + d;\n};\n\nexport const round = (value: number, precision = 0): number => {\n    \"worklet\";\n    const p = Math.pow(10, precision);\n    return Math.round(value * p) / p;\n};\n\nconst cuberoot = (x: number): number => {\n    \"worklet\";\n    const y = Math.pow(Math.abs(x), 1 / 3);\n    return x < 0 ? -y : y;\n};\n\nconst solveCubic = (a: number, b: number, c: number, d: number): number[] => {\n    \"worklet\";\n    if (Math.abs(a) < 1e-8) {\n        // Quadratic case, ax^2+bx+c=0\n        a = b;\n        b = c;\n        c = d;\n        if (Math.abs(a) < 1e-8) {\n            // Linear case, ax+b=0\n            a = b;\n            b = c;\n            if (Math.abs(a) < 1e-8) {\n                // Degenerate case\n                return [];\n            }\n            return [-b / a];\n        }\n\n        const D = b * b - 4 * a * c;\n        if (Math.abs(D) < 1e-8) {\n            return [-b / (2 * a)];\n        } else if (D > 0) {\n            return [\n                (-b + Math.sqrt(D)) / (2 * a),\n                (-b - Math.sqrt(D)) / (2 * a)\n            ];\n        }\n        return [];\n    }\n\n    // Convert to depressed cubic t^3+pt+q = 0 (subst x = t - b/3a)\n    const p = (3 * a * c - b * b) / (3 * a * a);\n    const q =\n        (2 * b * b * b - 9 * a * b * c + 27 * a * a * d) / (27 * a * a * a);\n    let roots;\n\n    if (Math.abs(p) < 1e-8) {\n        // p = 0 -> t^3 = -q -> t = -q^1/3\n        roots = [cuberoot(-q)];\n    } else if (Math.abs(q) < 1e-8) {\n        // q = 0 -> t^3 + pt = 0 -> t(t^2+p)=0\n        roots = [0].concat(p < 0 ? [Math.sqrt(-p), -Math.sqrt(-p)] : []);\n    } else {\n        const D = (q * q) / 4 + (p * p * p) / 27;\n        if (Math.abs(D) < 1e-8) {\n            // D = 0 -> two roots\n            roots = [(-1.5 * q) / p, (3 * q) / p];\n        } else if (D > 0) {\n            // Only one real root\n            const u = cuberoot(-q / 2 - Math.sqrt(D));\n            roots = [u - p / (3 * u)];\n        } else {\n            // D < 0, three roots, but needs to use complex numbers/trigonometric solution\n            const u = 2 * Math.sqrt(-p / 3);\n            const t = Math.acos((3 * q) / p / u) / 3; // D < 0 implies p < 0 and acos argument in [-1..1]\n            const k = (2 * Math.PI) / 3;\n            roots = [\n                u * Math.cos(t),\n                u * Math.cos(t - k),\n                u * Math.cos(t - 2 * k)\n            ];\n        }\n    }\n\n    // Convert back from depressed cubic\n    for (let i = 0; i < roots.length; i++) {\n        roots[i] -= b / (3 * a);\n    }\n\n    return roots;\n};\n\nexport const cubicBezierYForX = (\n    x: number,\n    a: Vector,\n    b: Vector,\n    c: Vector,\n    d: Vector,\n    precision = 2\n): number => {\n    \"worklet\";\n    const pa = -a.x + 3 * b.x - 3 * c.x + d.x;\n    const pb = 3 * a.x - 6 * b.x + 3 * c.x;\n    const pc = -3 * a.x + 3 * b.x;\n    const pd = a.x - x;\n    // eslint-disable-next-line prefer-destructuring\n    const t = solveCubic(pa, pb, pc, pd)\n        .map((root) => round(root, precision))\n        .filter((root) => root >= 0 && root <= 1)[0];\n    return cubicBezier(t, a.y, b.y, c.y, d.y);\n};\n\nexport const mapValues = (\n    value: number,\n    inputRange: number[],\n    outputRange: number[]\n): number => {\n    const leftSpan = inputRange[1] - inputRange[0];\n    const rightSpan = outputRange[1] - outputRange[0];\n\n    const valueScaled = (value - inputRange[0]) / leftSpan;\n    return outputRange[0] + valueScaled * rightSpan;\n};\n\nexport const relativePercent = (price: number, startPrice: number): number => {\n    const increase = price - startPrice;\n    const change = increase / startPrice;\n    return change;\n};\n","var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar TAU = Math.PI * 2;\n\nvar mapToEllipse = function mapToEllipse(_ref, rx, ry, cosphi, sinphi, centerx, centery) {\n  var x = _ref.x,\n      y = _ref.y;\n\n  x *= rx;\n  y *= ry;\n\n  var xp = cosphi * x - sinphi * y;\n  var yp = sinphi * x + cosphi * y;\n\n  return {\n    x: xp + centerx,\n    y: yp + centery\n  };\n};\n\nvar approxUnitArc = function approxUnitArc(ang1, ang2) {\n  // If 90 degree circular arc, use a constant\n  // as derived from http://spencermortensen.com/articles/bezier-circle\n  var a = ang2 === 1.5707963267948966 ? 0.551915024494 : ang2 === -1.5707963267948966 ? -0.551915024494 : 4 / 3 * Math.tan(ang2 / 4);\n\n  var x1 = Math.cos(ang1);\n  var y1 = Math.sin(ang1);\n  var x2 = Math.cos(ang1 + ang2);\n  var y2 = Math.sin(ang1 + ang2);\n\n  return [{\n    x: x1 - y1 * a,\n    y: y1 + x1 * a\n  }, {\n    x: x2 + y2 * a,\n    y: y2 - x2 * a\n  }, {\n    x: x2,\n    y: y2\n  }];\n};\n\nvar vectorAngle = function vectorAngle(ux, uy, vx, vy) {\n  var sign = ux * vy - uy * vx < 0 ? -1 : 1;\n\n  var dot = ux * vx + uy * vy;\n\n  if (dot > 1) {\n    dot = 1;\n  }\n\n  if (dot < -1) {\n    dot = -1;\n  }\n\n  return sign * Math.acos(dot);\n};\n\nvar getArcCenter = function getArcCenter(px, py, cx, cy, rx, ry, largeArcFlag, sweepFlag, sinphi, cosphi, pxp, pyp) {\n  var rxsq = Math.pow(rx, 2);\n  var rysq = Math.pow(ry, 2);\n  var pxpsq = Math.pow(pxp, 2);\n  var pypsq = Math.pow(pyp, 2);\n\n  var radicant = rxsq * rysq - rxsq * pypsq - rysq * pxpsq;\n\n  if (radicant < 0) {\n    radicant = 0;\n  }\n\n  radicant /= rxsq * pypsq + rysq * pxpsq;\n  radicant = Math.sqrt(radicant) * (largeArcFlag === sweepFlag ? -1 : 1);\n\n  var centerxp = radicant * rx / ry * pyp;\n  var centeryp = radicant * -ry / rx * pxp;\n\n  var centerx = cosphi * centerxp - sinphi * centeryp + (px + cx) / 2;\n  var centery = sinphi * centerxp + cosphi * centeryp + (py + cy) / 2;\n\n  var vx1 = (pxp - centerxp) / rx;\n  var vy1 = (pyp - centeryp) / ry;\n  var vx2 = (-pxp - centerxp) / rx;\n  var vy2 = (-pyp - centeryp) / ry;\n\n  var ang1 = vectorAngle(1, 0, vx1, vy1);\n  var ang2 = vectorAngle(vx1, vy1, vx2, vy2);\n\n  if (sweepFlag === 0 && ang2 > 0) {\n    ang2 -= TAU;\n  }\n\n  if (sweepFlag === 1 && ang2 < 0) {\n    ang2 += TAU;\n  }\n\n  return [centerx, centery, ang1, ang2];\n};\n\nvar arcToBezier = function arcToBezier(_ref2) {\n  var px = _ref2.px,\n      py = _ref2.py,\n      cx = _ref2.cx,\n      cy = _ref2.cy,\n      rx = _ref2.rx,\n      ry = _ref2.ry,\n      _ref2$xAxisRotation = _ref2.xAxisRotation,\n      xAxisRotation = _ref2$xAxisRotation === undefined ? 0 : _ref2$xAxisRotation,\n      _ref2$largeArcFlag = _ref2.largeArcFlag,\n      largeArcFlag = _ref2$largeArcFlag === undefined ? 0 : _ref2$largeArcFlag,\n      _ref2$sweepFlag = _ref2.sweepFlag,\n      sweepFlag = _ref2$sweepFlag === undefined ? 0 : _ref2$sweepFlag;\n\n  var curves = [];\n\n  if (rx === 0 || ry === 0) {\n    return [];\n  }\n\n  var sinphi = Math.sin(xAxisRotation * TAU / 360);\n  var cosphi = Math.cos(xAxisRotation * TAU / 360);\n\n  var pxp = cosphi * (px - cx) / 2 + sinphi * (py - cy) / 2;\n  var pyp = -sinphi * (px - cx) / 2 + cosphi * (py - cy) / 2;\n\n  if (pxp === 0 && pyp === 0) {\n    return [];\n  }\n\n  rx = Math.abs(rx);\n  ry = Math.abs(ry);\n\n  var lambda = Math.pow(pxp, 2) / Math.pow(rx, 2) + Math.pow(pyp, 2) / Math.pow(ry, 2);\n\n  if (lambda > 1) {\n    rx *= Math.sqrt(lambda);\n    ry *= Math.sqrt(lambda);\n  }\n\n  var _getArcCenter = getArcCenter(px, py, cx, cy, rx, ry, largeArcFlag, sweepFlag, sinphi, cosphi, pxp, pyp),\n      _getArcCenter2 = _slicedToArray(_getArcCenter, 4),\n      centerx = _getArcCenter2[0],\n      centery = _getArcCenter2[1],\n      ang1 = _getArcCenter2[2],\n      ang2 = _getArcCenter2[3];\n\n  // If 'ang2' == 90.0000000001, then `ratio` will evaluate to\n  // 1.0000000001. This causes `segments` to be greater than one, which is an\n  // unecessary split, and adds extra points to the bezier curve. To alleviate\n  // this issue, we round to 1.0 when the ratio is close to 1.0.\n\n\n  var ratio = Math.abs(ang2) / (TAU / 4);\n  if (Math.abs(1.0 - ratio) < 0.0000001) {\n    ratio = 1.0;\n  }\n\n  var segments = Math.max(Math.ceil(ratio), 1);\n\n  ang2 /= segments;\n\n  for (var i = 0; i < segments; i++) {\n    curves.push(approxUnitArc(ang1, ang2));\n    ang1 += ang2;\n  }\n\n  return curves.map(function (curve) {\n    var _mapToEllipse = mapToEllipse(curve[0], rx, ry, cosphi, sinphi, centerx, centery),\n        x1 = _mapToEllipse.x,\n        y1 = _mapToEllipse.y;\n\n    var _mapToEllipse2 = mapToEllipse(curve[1], rx, ry, cosphi, sinphi, centerx, centery),\n        x2 = _mapToEllipse2.x,\n        y2 = _mapToEllipse2.y;\n\n    var _mapToEllipse3 = mapToEllipse(curve[2], rx, ry, cosphi, sinphi, centerx, centery),\n        x = _mapToEllipse3.x,\n        y = _mapToEllipse3.y;\n\n    return { x1: x1, y1: y1, x2: x2, y2: y2, x: x, y: y };\n  });\n};\n\nexport default arcToBezier;","import arcToCurve from 'svg-arc-to-cubic-bezier'\r\n\r\nexport default function normalize(path){\r\n  // init state\r\n  var prev\r\n  var result = []\r\n  var bezierX = 0\r\n  var bezierY = 0\r\n  var startX = 0\r\n  var startY = 0\r\n  var quadX = null\r\n  var quadY = null\r\n  var x = 0\r\n  var y = 0\r\n\r\n  for (var i = 0, len = path.length; i < len; i++) {\r\n    var seg = path[i]\r\n    var command = seg[0]\r\n\r\n    switch (command) {\r\n      case 'M':\r\n        startX = seg[1]\r\n        startY = seg[2]\r\n        break\r\n      case 'A':\r\n        var curves = arcToCurve({\r\n          px: x,\r\n          py: y,\r\n          cx: seg[6],\r\n          cy:  seg[7],\r\n          rx: seg[1],\r\n          ry: seg[2],\r\n          xAxisRotation: seg[3],\r\n          largeArcFlag: seg[4],\r\n          sweepFlag: seg[5]\r\n        })\r\n\r\n        // null-curves\r\n        if (!curves.length) continue\r\n\r\n        for (var j = 0, c; j < curves.length; j++) {\r\n          c = curves[j]\r\n          seg = ['C', c.x1, c.y1, c.x2, c.y2, c.x, c.y]\r\n          if (j < curves.length - 1) result.push(seg)\r\n        }\r\n\r\n        break\r\n      case 'S':\r\n        // default control point\r\n        var cx = x\r\n        var cy = y\r\n        if (prev == 'C' || prev == 'S') {\r\n          cx += cx - bezierX // reflect the previous command's control\r\n          cy += cy - bezierY // point relative to the current point\r\n        }\r\n        seg = ['C', cx, cy, seg[1], seg[2], seg[3], seg[4]]\r\n        break\r\n      case 'T':\r\n        if (prev == 'Q' || prev == 'T') {\r\n          quadX = x * 2 - quadX // as with 'S' reflect previous control point\r\n          quadY = y * 2 - quadY\r\n        } else {\r\n          quadX = x\r\n          quadY = y\r\n        }\r\n        seg = quadratic(x, y, quadX, quadY, seg[1], seg[2])\r\n        break\r\n      case 'Q':\r\n        quadX = seg[1]\r\n        quadY = seg[2]\r\n        seg = quadratic(x, y, seg[1], seg[2], seg[3], seg[4])\r\n        break\r\n      case 'L':\r\n        seg = line(x, y, seg[1], seg[2])\r\n        break\r\n      case 'H':\r\n        seg = line(x, y, seg[1], y)\r\n        break\r\n      case 'V':\r\n        seg = line(x, y, x, seg[1])\r\n        break\r\n      case 'Z':\r\n        seg = line(x, y, startX, startY)\r\n        break\r\n    }\r\n\r\n    // update state\r\n    prev = command\r\n    x = seg[seg.length - 2]\r\n    y = seg[seg.length - 1]\r\n    if (seg.length > 4) {\r\n      bezierX = seg[seg.length - 4]\r\n      bezierY = seg[seg.length - 3]\r\n    } else {\r\n      bezierX = x\r\n      bezierY = y\r\n    }\r\n    result.push(seg)\r\n  }\r\n\r\n  return result\r\n}\r\n\r\nfunction line(x1, y1, x2, y2){\r\n  return ['C', x1, y1, x2, y2, x2, y2]\r\n}\r\n\r\nfunction quadratic(x1, y1, cx, cy, x2, y2){\r\n  return [\r\n    'C',\r\n    x1/3 + (2/3) * cx,\r\n    y1/3 + (2/3) * cy,\r\n    x2/3 + (2/3) * cx,\r\n    y2/3 + (2/3) * cy,\r\n    x2,\r\n    y2\r\n  ]\r\n}\r\n","import { Vector, cubicBezierYForX } from \"./math\";\nimport parseSVG from \"parse-svg-path\";\nimport absSVG from \"abs-svg-path\";\nimport normalize from \"normalize-svg-path\";\n\ntype SVGCloseCommand = [\"Z\"];\ntype SVGMoveCommand = [\"M\", number, number];\ntype SVGCurveCommand = [\"C\", number, number, number, number, number, number];\ntype SVGNormalizedCommands = [\n    SVGMoveCommand,\n    ...(SVGCurveCommand | SVGCloseCommand)[]\n];\n\ninterface Curve {\n    to: Vector;\n    c1: Vector;\n    c2: Vector;\n}\n\nexport type Path = {\n    move: Vector;\n    curves: Curve[];\n    close: boolean;\n};\n\nexport const createPath = (move: Vector): Path => {\n    return {\n        move,\n        curves: [],\n        close: false\n    };\n};\n\nexport const close = (path: Path): void => {\n    path.close = true;\n};\n\nexport const addCurve = (path: Path, c: Curve): void => {\n    path.curves.push({\n        c1: c.c1,\n        c2: c.c2,\n        to: c.to\n    });\n};\n\nexport const parse = (d: string): Path => {\n    const segments: SVGNormalizedCommands = normalize(absSVG(parseSVG(d)));\n    const path = createPath({ x: segments[0][1], y: segments[0][2] });\n    segments.forEach((segment) => {\n        if (segment[0] === \"Z\") {\n            close(path);\n        } else if (segment[0] === \"C\") {\n            addCurve(path, {\n                c1: {\n                    x: segment[1],\n                    y: segment[2]\n                },\n                c2: {\n                    x: segment[3],\n                    y: segment[4]\n                },\n                to: {\n                    x: segment[5],\n                    y: segment[6]\n                }\n            });\n        }\n    });\n    return path;\n};\n\ninterface SelectedCurve {\n    from: Vector;\n    curve: Curve;\n}\n\ninterface NullableSelectedCurve {\n    from: Vector;\n    curve: Curve | null;\n}\n\nconst curveIsFound = (c: NullableSelectedCurve): c is SelectedCurve => {\n    \"worklet\";\n    return c.curve !== null;\n};\n\nexport const selectCurve = (path: Path, x: number): SelectedCurve => {\n    \"worklet\";\n    const result: NullableSelectedCurve = {\n        from: path.move,\n        curve: null\n    };\n    for (let i = 0; i < path.curves.length; i++) {\n        const c = path.curves[i];\n        const contains =\n            result.from.x > c.to.x\n                ? x >= c.to.x && x <= result.from.x\n                : x >= result.from.x && x <= c.to.x;\n        if (contains) {\n            result.curve = c;\n            break;\n        }\n        result.from = c.to;\n    }\n    if (!curveIsFound(result)) {\n        throw new Error(`No curve found at ${x}`);\n    }\n    return result;\n};\n\nexport const getYForX = (path: Path, x: number, precision = 2): number => {\n    const c = selectCurve(path, x);\n    return cubicBezierYForX(\n        x,\n        c.from,\n        c.curve.c1,\n        c.curve.c2,\n        c.curve.to,\n        precision\n    );\n};\n","import { ChartData, DataPoints, HeaderConfig } from \"../types/types\";\n\nconst defaultHeader = {\n    currentValue: {\n        display: true,\n        update: true,\n        prefix: \"\",\n        suffix: \"\"\n    },\n    percentageChange: {\n        display: true,\n        update: true\n    },\n    labels: {\n        display: true,\n        update: true\n    }\n} as HeaderConfig;\n\nconst defaultCursor = {\n    display: true,\n    cursorColor: \"black\",\n    lineColor: \"black\"\n};\n\nexport default class DataLoader {\n    chartLabels: string[] | null;\n    chartData: DataPoints[];\n    title?: string;\n    graphColor: string;\n    header: HeaderConfig;\n    cursor: {\n        display: boolean;\n        lineColor: string | null;\n        cursorColor: string | null;\n    };\n\n    currentValueDisplayPrefix: string;\n    partialGraph: boolean;\n\n    /**\n     * Assign default values if not given\n     */\n    constructor({\n        chartLabels,\n        chartData,\n        title = undefined,\n        graphColor = \"black\",\n        header = defaultHeader,\n        cursor = defaultCursor,\n        currentValueDisplayPrefix = \"\",\n        partialGraph = false\n    }: ChartData) {\n        this.throwErrorOnInvalidParameters({\n            chartLabels,\n            chartData,\n            title,\n            graphColor,\n            header,\n            cursor,\n            currentValueDisplayPrefix,\n            partialGraph\n        });\n\n        this.chartLabels = chartLabels;\n        this.chartData = chartData;\n        this.title = title;\n        this.graphColor = graphColor;\n        this.header = header;\n        this.cursor = cursor;\n        this.currentValueDisplayPrefix = currentValueDisplayPrefix;\n        this.partialGraph = partialGraph;\n    }\n\n    throwErrorOnInvalidParameters = (data: ChartData): void => {\n        data.chartData.forEach((data) => {\n            data.points.forEach((point) => {\n                if (typeof point.value !== \"number\") {\n                    throw new Error(\"Invalid value type for datapoint\" + point);\n                }\n            });\n        });\n\n        if (data.chartLabels) {\n            if (\n                data.chartLabels.length > 0 &&\n                data.chartLabels.length !== data.chartData.length\n            ) {\n                throw new Error(\n                    `Length of chart labels not matching length of data. Expected ${data.chartData.length} labels only got ${data.chartLabels.length}.`\n                );\n            }\n        }\n\n        const header = data.header;\n        if (header!.currentValue.update && !header!.currentValue.display) {\n            throw new Error(\n                \"updateCurrentValue cannot be true if displayCurrentValue is false or undefined.\"\n            );\n        }\n\n        if (\n            header!.percentageChange.update &&\n            !header!.percentageChange.display\n        ) {\n            throw new Error(\n                \"updatePercentageChange cannot be true if displayPercentageChange is false or undefined.\"\n            );\n        }\n    };\n}\n","import * as shape from \"d3-shape\";\nimport { scaleLinear } from \"d3-scale\";\nimport { ChartData, DataPoint, DataPoints } from \"../types/types\";\nimport { getYForX, parse, Path } from \"./path\";\nimport { interpolatePath } from \"d3-interpolate-path\";\nimport { mapValues, relativePercent } from \"./math\";\nimport React from \"react\";\nimport DataLoader from \"./dataLoader\";\nconst d3 = require(\"d3\");\n\ntype PathData = {\n    minPrice: number;\n    maxPrice: number;\n    datapoints: DataPoints;\n    path: string;\n};\n\nexport default class ChartModel {\n    data: ChartData;\n    width: number;\n    height: number;\n    state: number;\n    pathData: PathData;\n    parsedPath: Path;\n    morphing: boolean;\n    /**\n     *\n     */\n    constructor(\n        _data: ChartData,\n        _width: number,\n        _height: number,\n        _state: number\n    ) {\n        this.data = new DataLoader(_data);\n        this.width = _width;\n        this.height = _height;\n        this.state = _state;\n        this.morphing = false;\n\n        this.pathData = this.calcPath();\n        this.parsedPath = parse(this.pathData.path);\n    }\n\n    calcPath = (): PathData => {\n        const datapoints = this.data.chartData[this.state];\n        // Parse string to float\n        const formattedValues = datapoints.points.map(\n            (datapoint, index) => [datapoint.value, index] as [number, number]\n        );\n\n        // Split formattedValues to prices and dates array\n        const prices = formattedValues.map((value) => value[0]);\n        const indices = formattedValues.map((value) => value[1]);\n\n        // scales min_date-max_date to 0-SIZE\n        // data_points - max_data_points -> 0 - width\n        let relDataPoints = 1;\n        if (datapoints.maxDataPoints !== undefined) {\n            const maxDataPoints = datapoints.maxDataPoints;\n            const dataPoints = datapoints.points.length;\n            relDataPoints = dataPoints / maxDataPoints;\n        }\n\n        const scaleX = scaleLinear()\n            .domain([Math.min(...indices), Math.max(...indices)])\n            .range([0, this.width * relDataPoints]);\n\n        const minPrice = Math.min(...prices);\n        const maxPrice = Math.max(...prices);\n        // scales min_prices-max_price to SIZE-0 (flipped range)\n        const scaleY = scaleLinear()\n            .domain([minPrice, maxPrice])\n            .range([this.height - 10, 10]);\n\n        return {\n            minPrice,\n            maxPrice,\n            datapoints: datapoints,\n            path: shape\n                .line()\n                .x(([, x]) => scaleX(x) as number)\n                .y(([y]) => scaleY(y) as number)\n                .curve(shape.curveCatmullRom.alpha(0.2))(\n                formattedValues\n            ) as string\n        };\n    };\n\n    changeState = (\n        state: number,\n        morph: boolean | undefined,\n        ref: React.RefObject<SVGPathElement>\n    ): void => {\n        this.state = state;\n\n        if (morph === true) {\n            const previous = this.pathData.path;\n            const interpolatedPathData = this.getInterpolatedPath();\n\n            this.morphPath(previous, interpolatedPathData, state, ref);\n        }\n\n        this.pathData = this.calcPath();\n        this.parsedPath = parse(this.pathData.path);\n    };\n\n    morphPath = (\n        oldPath: string,\n        newPath: (t: number) => string,\n        newState: number,\n        graphRef: React.RefObject<SVGPathElement>\n    ): void => {\n        d3.select(graphRef.current)\n            .attr(\"d\", oldPath)\n            .transition()\n            .duration(1000)\n            .attrTween(\"d\", () => newPath)\n            .on(\"start\", () => {\n                this.morphing = true;\n            })\n            .on(\"end\", () => {\n                this.state = newState;\n                this.morphing = false;\n            });\n    };\n\n    getInterpolatedPath = (): ((t: number) => string) => {\n        const current = this.calcPath();\n        return interpolatePath(this.pathData.path, current.path);\n    };\n\n    getXYValues = (\n        xPosition: number,\n        maxDataPoints: number\n    ): {\n        dataPointsIndex: number;\n        xValue: number;\n        yValue: number;\n    } => {\n        const dataPointsIndex = Math.abs(\n            Math.round(\n                mapValues(xPosition, [0, this.width], [0, maxDataPoints - 1])\n            )\n        );\n\n        if (dataPointsIndex >= this.data.chartData[this.state].points.length) {\n            return { dataPointsIndex: -1, xValue: -1, yValue: -1 };\n        }\n\n        const xValue = mapValues(\n            dataPointsIndex,\n            [0, maxDataPoints - 1],\n            [0, this.width]\n        );\n\n        const yValue =\n            this.data.chartData[this.state].points[dataPointsIndex].value;\n        const yCord = mapValues(\n            yValue,\n            [this.pathData.minPrice, this.pathData.maxPrice],\n            [this.height - 10, 10]\n        );\n\n        return { dataPointsIndex, xValue, yValue: yCord };\n    };\n\n    getYOnGraph = (x: number): number => {\n        try {\n            return getYForX(this.parsedPath, x);\n        } catch (error) {\n            return -1;\n        }\n    };\n\n    getMaxDataPoints = (): number => {\n        const currentDPs = this.data.chartData[this.state];\n        if (currentDPs.maxDataPoints === undefined) {\n            return currentDPs.points.length;\n        } else {\n            return currentDPs.maxDataPoints;\n        }\n    };\n\n    getPercentChangeFromIndex = (index: number): number => {\n        const firstValue = this.getDataPointByIndex(0).value;\n        const secondValue = this.getDataPointByIndex(index).value;\n\n        const percentChange = relativePercent(secondValue, firstValue);\n        return Math.round(percentChange * 10000) / 100;\n    };\n\n    getLatestDataPoint = (): DataPoint => {\n        const pointsLength = this.data.chartData[this.state].points.length;\n        return this.data.chartData[this.state].points[pointsLength - 1];\n    };\n\n    getDataPointByIndex = (index: number): DataPoint => {\n        return this.data.chartData[this.state].points[index];\n    };\n\n    getDataPointsLength = (): number => {\n        return this.data.chartData[this.state].points.length;\n    };\n}\n","import React from \"react\";\nimport { DynamicHeaderData } from \"../types/types\";\nimport styles from \"../styles.module.css\";\n\ninterface HeaderProps {\n    headerConfig: any;\n    headerData: DynamicHeaderData;\n}\n\nexport const Header: React.FC<HeaderProps> = ({ headerConfig, headerData }) => {\n    return (\n        <div>\n            <h1 className={styles.title}>{headerData.title}</h1>\n            {!headerConfig.currentValue.display ? null : (\n                <h1 className={styles.dpValue}>{headerData.dataPointValue}</h1>\n            )}\n            {!headerConfig.percentageChange.display &&\n            !headerConfig.labels.display ? null : (\n                <div>\n                    <p className={styles.percentChange}>\n                        {headerConfig.percentageChange.display\n                            ? `${headerData.percentChange}%`\n                            : null}\n                    </p>\n                    <p className={styles.label}>\n                        {headerConfig.labels.display ? headerData.label : null}\n                    </p>\n                </div>\n            )}\n        </div>\n    );\n};\n","import React from 'react'\nimport ChartModel from '../lib/model';\nimport styles from \"../styles.module.css\";\n\ninterface LabelButtonsProps {\n    chartLabels: string[] | null,\n    chartModel: ChartModel,\n    handleChartChangeClick: Function\n}\n\nexport const LabelButtons: React.FC<LabelButtonsProps> = ({chartLabels, chartModel, handleChartChangeClick}) => {\n    return (\n        <div>\n            { chartLabels === null ? null :\n                <div className={styles.buttonContainer}>\n                {chartLabels.map((value, index) => (\n                    <button\n                    className={index===chartModel?.state ? styles.selectedButton : \"\"}\n                    key={index}\n                    onClick={() => handleChartChangeClick(index)}\n                    >\n                        {value}\n                    </button>\n                ))}\n                </div>\n            }\n        </div>\n    );\n}","import React, { useEffect, useRef, useState } from \"react\";\nimport ChartModel from \"./lib/model\";\nimport { Header } from \"./modules/header\";\nimport { LabelButtons } from \"./modules/labelButtons\";\nimport styles from \"./styles.module.css\";\nimport { ChartCursor, DynamicHeaderData } from \"./types/types\";\n\ninterface ChartProps {\n    chartModel: ChartModel;\n    children?: (headerData: DynamicHeaderData) => React.ReactNode;\n}\n\nconst HEADER_HEIGHT = 100;\n\nfunction useForceUpdate() {\n    const [value, setValue] = useState(0);\n    return () => setValue(value + 1);\n}\n\nexport const Graph: React.FC<ChartProps> = ({ chartModel, children }) => {\n    const [chartCursor, setChartCursor] = useState({\n        x: 0,\n        y: 0,\n        show: false\n    } as ChartCursor);\n    const [headerData, setHeaderData] = useState({\n        dataPointValue: null,\n        percentChange: null,\n        label: null\n    } as DynamicHeaderData);\n    const graphRef = useRef(null);\n    const forceUpdate = useForceUpdate();\n\n    useEffect(() => {\n        if (headerData.dataPointValue === null) {\n            setHeaderData({\n                title: chartModel.data.title,\n                dataPointValue: chartModel.getLatestDataPoint().value,\n                percentChange: chartModel.getPercentChangeFromIndex(\n                    chartModel.getDataPointsLength() - 1\n                ),\n                label: chartModel.getLatestDataPoint().label\n            });\n        }\n    });\n\n    const handleChartChangeClick = (state: number) => {\n        chartModel.changeState(state, true, graphRef);\n        forceUpdate();\n    };\n\n    const handleMouseLeave = () => {\n        changeHeaderData(chartModel.getDataPointsLength());\n        setChartCursor({\n            x: 0,\n            y: 0,\n            show: false\n        });\n    };\n\n    const handleMouseMove = (event: React.MouseEvent) => {\n        if (chartModel.morphing || !chartModel.data.cursor?.display) return;\n\n        const maxDataPoints = chartModel.getMaxDataPoints();\n        const { dataPointsIndex, xValue, yValue } = chartModel.getXYValues(\n            event.nativeEvent.offsetX,\n            maxDataPoints\n        );\n\n        changeHeaderData(dataPointsIndex);\n        setChartCursor({\n            x: xValue,\n            y: yValue,\n            show: yValue !== -1\n        });\n    };\n\n    const changeHeaderData = (index: number) => {\n        if (index < chartModel.getDataPointsLength() && index >= 0) {\n            let dpValue = headerData.dataPointValue;\n            let pcValue = headerData.percentChange;\n            let dpLabel = headerData.label;\n\n            const headerConfig = chartModel.data.header!;\n\n            if (headerConfig.currentValue.update) {\n                dpValue = chartModel.getDataPointByIndex(index).value;\n            }\n            if (headerConfig.percentageChange.update) {\n                pcValue = chartModel.getPercentChangeFromIndex(index);\n            }\n            if (headerConfig.labels.update) {\n                dpLabel = chartModel.getDataPointByIndex(index).label;\n            }\n\n            setHeaderData((data) => ({\n                title: data.title,\n                dataPointValue: dpValue,\n                percentChange: pcValue,\n                label: dpLabel\n            }));\n        }\n    };\n\n    const headerConfig = chartModel.data.header!;\n    const chartLabels = chartModel.data.chartLabels;\n\n    return (\n        <div\n            className={styles.chartContainer}\n            style={{ width: chartModel.width }}\n        >\n            <div style={{ maxHeight: HEADER_HEIGHT }} className=\"header\">\n                {children === undefined ? (\n                    <Header\n                        headerData={headerData}\n                        headerConfig={headerConfig}\n                    />\n                ) : (\n                    children(headerData)\n                )}\n            </div>\n            <svg\n                width={chartModel.width}\n                height={chartModel.height}\n                onMouseMove={handleMouseMove}\n                onMouseLeave={handleMouseLeave}\n                className={styles.graph}\n            >\n                <path\n                    d={\n                        chartModel.pathData.path !== null\n                            ? chartModel.pathData.path\n                            : \"\"\n                    }\n                    style={{\n                        fill: \"transparent\",\n                        stroke: chartModel.data.graphColor,\n                        strokeWidth: 3\n                    }}\n                    ref={graphRef}\n                />\n                <circle\n                    cx={chartCursor.x}\n                    cy={chartCursor.y}\n                    r={chartCursor.show ? 6 : 0}\n                    stroke=\"white\"\n                    strokeWidth={2}\n                    fill={chartModel.data.cursor?.cursorColor || \"\"}\n                />\n                <line\n                    strokeWidth={chartCursor.show ? 1.5 : 0}\n                    x1={chartCursor.x}\n                    y1={chartModel.height}\n                    x2={chartCursor.x}\n                    y2={chartCursor.y}\n                    stroke={chartModel.data.cursor?.lineColor || \"\"}\n                    opacity={0.7}\n                />\n            </svg>\n            <LabelButtons\n                chartLabels={chartLabels}\n                chartModel={chartModel}\n                handleChartChangeClick={handleChartChangeClick}\n            />\n        </div>\n    );\n};\n","import React from \"react\";\nimport ChartModel from \"./lib/model\";\nimport { Graph } from \"./graph\";\nimport { ChartData, DynamicHeaderData } from \"./types/types\";\n\ntype ChartProps = {\n    width: number;\n    height: number;\n    data: ChartData;\n    children?: (headerData: DynamicHeaderData) => React.ReactNode;\n};\n\nconst Chart = ({ width, height, data, children }: ChartProps) => {\n    const chartModel = new ChartModel(data, width, height, 0);\n\n    return <Graph chartModel={chartModel} children={children} />;\n};\n\nexport default Chart;\n","export const data = {\n    chartLabels: [\"1D\", \"5D\", \"1M\", \"1Y\"],\n    chartData: [\n        {\n            maxDataPoints: 78,\n            points: [\n                {\n                    value: 212.32,\n                    label: \"09:30\"\n                },\n                {\n                    value: 213.18,\n                    label: \"09:35\"\n                },\n                {\n                    value: 213.23,\n                    label: \"09:40\"\n                },\n                {\n                    value: 213.26,\n                    label: \"09:45\"\n                },\n                {\n                    value: 212.91,\n                    label: \"09:50\"\n                },\n                {\n                    value: 212.81,\n                    label: \"09:55\"\n                },\n                {\n                    value: 213.35,\n                    label: \"10:00\"\n                },\n                {\n                    value: 213.19,\n                    label: \"10:05\"\n                },\n                {\n                    value: 213.49,\n                    label: \"10:10\"\n                },\n                {\n                    value: 213.22,\n                    label: \"10:15\"\n                },\n                {\n                    value: 212.92,\n                    label: \"10:20\"\n                },\n                {\n                    value: 212.81,\n                    label: \"10:25\"\n                },\n                {\n                    value: 212.38,\n                    label: \"10:30\"\n                },\n                {\n                    value: 212.51,\n                    label: \"10:35\"\n                },\n                {\n                    value: 212.52,\n                    label: \"10:40\"\n                },\n                {\n                    value: 212.89,\n                    label: \"10:45\"\n                },\n                {\n                    value: 212.79,\n                    label: \"10:50\"\n                },\n                {\n                    value: 213.06,\n                    label: \"10:55\"\n                },\n                {\n                    value: 212.56,\n                    label: \"11:00\"\n                },\n                {\n                    value: 212.57,\n                    label: \"11:05\"\n                },\n                {\n                    value: 212.62,\n                    label: \"11:10\"\n                },\n                {\n                    value: 212.27,\n                    label: \"11:15\"\n                },\n                {\n                    value: 212.32,\n                    label: \"11:20\"\n                },\n                {\n                    value: 212.4,\n                    label: \"11:25\"\n                },\n                {\n                    value: 211.93,\n                    label: \"11:30\"\n                },\n                {\n                    value: 212.16,\n                    label: \"11:35\"\n                },\n                {\n                    value: 212.14,\n                    label: \"11:40\"\n                },\n                {\n                    value: 212.27,\n                    label: \"11:45\"\n                },\n                {\n                    value: 212.3,\n                    label: \"11:50\"\n                },\n                {\n                    value: 212.47,\n                    label: \"11:55\"\n                },\n                {\n                    value: 212.4,\n                    label: \"12:00\"\n                },\n                {\n                    value: 212.36,\n                    label: \"12:05\"\n                },\n                {\n                    value: 212.51,\n                    label: \"12:10\"\n                },\n                {\n                    value: 212.47,\n                    label: \"12:15\"\n                },\n                {\n                    value: 212.16,\n                    label: \"12:20\"\n                },\n                {\n                    value: 212.29,\n                    label: \"12:25\"\n                },\n                {\n                    value: 212.33,\n                    label: \"12:30\"\n                },\n                {\n                    value: 212.25,\n                    label: \"12:35\"\n                },\n                {\n                    value: 211.98,\n                    label: \"12:40\"\n                },\n                {\n                    value: 212.03,\n                    label: \"12:45\"\n                },\n                {\n                    value: 212.12,\n                    label: \"12:50\"\n                },\n                {\n                    value: 212.06,\n                    label: \"12:55\"\n                },\n                {\n                    value: 211.73,\n                    label: \"13:00\"\n                },\n                {\n                    value: 211.71,\n                    label: \"13:05\"\n                },\n                {\n                    value: 211.95,\n                    label: \"13:10\"\n                },\n                {\n                    value: 212.1,\n                    label: \"13:15\"\n                },\n                {\n                    value: 212.32,\n                    label: \"13:20\"\n                },\n                {\n                    value: 212.07,\n                    label: \"13:25\"\n                },\n                {\n                    value: 211.95,\n                    label: \"13:30\"\n                },\n                {\n                    value: 212.04,\n                    label: \"13:35\"\n                },\n                {\n                    value: 212.06,\n                    label: \"13:40\"\n                },\n                {\n                    value: 212.04,\n                    label: \"13:45\"\n                },\n                {\n                    value: 212.01,\n                    label: \"13:50\"\n                },\n                {\n                    value: 211.99,\n                    label: \"13:55\"\n                },\n                {\n                    value: 212.08,\n                    label: \"13:59\"\n                }\n            ]\n        },\n        {\n            maxDataPoints: 61,\n            points: [\n                {\n                    value: 211.65,\n                    label: \"May 19, 09:30\"\n                },\n                {\n                    value: 211.5,\n                    label: \"May 19, 10:00\"\n                },\n                {\n                    value: 211.79,\n                    label: \"May 19, 10:30\"\n                },\n                {\n                    value: 211.18,\n                    label: \"May 19, 11:00\"\n                },\n                {\n                    value: 211.33,\n                    label: \"May 19, 11:30\"\n                },\n                {\n                    value: 211.33,\n                    label: \"May 19, 12:00\"\n                },\n                {\n                    value: 211.07,\n                    label: \"May 19, 12:30\"\n                },\n                {\n                    value: 211.45,\n                    label: \"May 19, 13:00\"\n                },\n                {\n                    value: 211.26,\n                    label: \"May 19, 13:30\"\n                },\n                {\n                    value: 211.46,\n                    label: \"May 19, 14:00\"\n                },\n                {\n                    value: 210.6,\n                    label: \"May 19, 14:30\"\n                },\n                {\n                    value: 210.52,\n                    label: \"May 19, 15:00\"\n                },\n                {\n                    value: 212.54,\n                    label: \"May 19, 15:30\"\n                },\n                {\n                    value: 214.5,\n                    label: \"May 20, 09:30\"\n                },\n                {\n                    value: 215.61,\n                    label: \"May 20, 10:00\"\n                },\n                {\n                    value: 215.8,\n                    label: \"May 20, 10:30\"\n                },\n                {\n                    value: 216.29,\n                    label: \"May 20, 11:00\"\n                },\n                {\n                    value: 216,\n                    label: \"May 20, 11:30\"\n                },\n                {\n                    value: 215.96,\n                    label: \"May 20, 12:00\"\n                },\n                {\n                    value: 216.38,\n                    label: \"May 20, 12:30\"\n                },\n                {\n                    value: 217.01,\n                    label: \"May 20, 13:00\"\n                },\n                {\n                    value: 216.98,\n                    label: \"May 20, 13:30\"\n                },\n                {\n                    value: 216.63,\n                    label: \"May 20, 14:00\"\n                },\n                {\n                    value: 216.78,\n                    label: \"May 20, 14:30\"\n                },\n                {\n                    value: 216.88,\n                    label: \"May 20, 15:00\"\n                },\n                {\n                    value: 216.91,\n                    label: \"May 20, 15:30\"\n                },\n                {\n                    value: 213.21,\n                    label: \"May 21, 09:30\"\n                },\n                {\n                    value: 211.92,\n                    label: \"May 21, 10:00\"\n                },\n                {\n                    value: 211.69,\n                    label: \"May 21, 10:30\"\n                },\n                {\n                    value: 211.53,\n                    label: \"May 21, 11:00\"\n                },\n                {\n                    value: 210.09,\n                    label: \"May 21, 11:30\"\n                },\n                {\n                    value: 210.51,\n                    label: \"May 21, 12:00\"\n                },\n                {\n                    value: 210.27,\n                    label: \"May 21, 12:30\"\n                },\n                {\n                    value: 210.34,\n                    label: \"May 21, 13:00\"\n                },\n                {\n                    value: 210.36,\n                    label: \"May 21, 13:30\"\n                },\n                {\n                    value: 210.37,\n                    label: \"May 21, 14:00\"\n                },\n                {\n                    value: 210.23,\n                    label: \"May 21, 14:30\"\n                },\n                {\n                    value: 211.38,\n                    label: \"May 21, 15:00\"\n                },\n                {\n                    value: 211.09,\n                    label: \"May 21, 15:30\"\n                },\n                {\n                    value: 210.9,\n                    label: \"May 24, 09:30\"\n                },\n                {\n                    value: 210.09,\n                    label: \"May 24, 10:00\"\n                },\n                {\n                    value: 210.81,\n                    label: \"May 24, 10:30\"\n                },\n                {\n                    value: 211.16,\n                    label: \"May 24, 11:00\"\n                },\n                {\n                    value: 211.28,\n                    label: \"May 24, 11:30\"\n                },\n                {\n                    value: 211.05,\n                    label: \"May 24, 12:00\"\n                },\n                {\n                    value: 210.89,\n                    label: \"May 24, 12:30\"\n                },\n                {\n                    value: 211.47,\n                    label: \"May 24, 13:00\"\n                },\n                {\n                    value: 211.06,\n                    label: \"May 24, 13:30\"\n                },\n                {\n                    value: 211.26,\n                    label: \"May 24, 14:00\"\n                },\n                {\n                    value: 211.33,\n                    label: \"May 24, 14:30\"\n                },\n                {\n                    value: 210.62,\n                    label: \"May 24, 15:00\"\n                },\n                {\n                    value: 210.28,\n                    label: \"May 24, 15:30\"\n                },\n                {\n                    value: 212.81,\n                    label: \"May 25, 09:30\"\n                },\n                {\n                    value: 212.81,\n                    label: \"May 25, 10:00\"\n                },\n                {\n                    value: 213.06,\n                    label: \"May 25, 10:30\"\n                },\n                {\n                    value: 212.4,\n                    label: \"May 25, 11:00\"\n                },\n                {\n                    value: 212.47,\n                    label: \"May 25, 11:30\"\n                },\n                {\n                    value: 212.29,\n                    label: \"May 25, 12:00\"\n                },\n                {\n                    value: 212.06,\n                    label: \"May 25, 12:30\"\n                },\n                {\n                    value: 212.07,\n                    label: \"May 25, 13:00\"\n                },\n                {\n                    value: 212.08,\n                    label: \"May 25, 13:30\"\n                }\n            ]\n        },\n        {\n            maxDataPoints: 153,\n            points: [\n                {\n                    value: 232.01,\n                    label: \"Apr 26, 09:30\"\n                },\n                {\n                    value: 231.95,\n                    label: \"Apr 26, 10:30\"\n                },\n                {\n                    value: 231.89,\n                    label: \"Apr 26, 11:30\"\n                },\n                {\n                    value: 232.83,\n                    label: \"Apr 26, 12:30\"\n                },\n                {\n                    value: 232.68,\n                    label: \"Apr 26, 13:30\"\n                },\n                {\n                    value: 232.05,\n                    label: \"Apr 26, 14:30\"\n                },\n                {\n                    value: 232.68,\n                    label: \"Apr 26, 15:30\"\n                },\n                {\n                    value: 235.75,\n                    label: \"Apr 27, 09:30\"\n                },\n                {\n                    value: 235.32,\n                    label: \"Apr 27, 10:30\"\n                },\n                {\n                    value: 236.05,\n                    label: \"Apr 27, 11:30\"\n                },\n                {\n                    value: 236.59,\n                    label: \"Apr 27, 12:30\"\n                },\n                {\n                    value: 236.6,\n                    label: \"Apr 27, 13:30\"\n                },\n                {\n                    value: 235.88,\n                    label: \"Apr 27, 14:30\"\n                },\n                {\n                    value: 235.89,\n                    label: \"Apr 27, 15:30\"\n                },\n                {\n                    value: 238.36,\n                    label: \"Apr 28, 09:30\"\n                },\n                {\n                    value: 237.51,\n                    label: \"Apr 28, 10:30\"\n                },\n                {\n                    value: 237.97,\n                    label: \"Apr 28, 11:30\"\n                },\n                {\n                    value: 238.23,\n                    label: \"Apr 28, 12:30\"\n                },\n                {\n                    value: 237.45,\n                    label: \"Apr 28, 13:30\"\n                },\n                {\n                    value: 237.94,\n                    label: \"Apr 28, 14:30\"\n                },\n                {\n                    value: 236.72,\n                    label: \"Apr 28, 15:30\"\n                },\n                {\n                    value: 234.5,\n                    label: \"Apr 29, 09:30\"\n                },\n                {\n                    value: 233.99,\n                    label: \"Apr 29, 10:30\"\n                },\n                {\n                    value: 233.02,\n                    label: \"Apr 29, 11:30\"\n                },\n                {\n                    value: 233.24,\n                    label: \"Apr 29, 12:30\"\n                },\n                {\n                    value: 233.42,\n                    label: \"Apr 29, 13:30\"\n                },\n                {\n                    value: 234,\n                    label: \"Apr 29, 14:30\"\n                },\n                {\n                    value: 234.18,\n                    label: \"Apr 29, 15:30\"\n                },\n                {\n                    value: 233.44,\n                    label: \"Apr 30, 09:30\"\n                },\n                {\n                    value: 232.22,\n                    label: \"Apr 30, 10:30\"\n                },\n                {\n                    value: 232.55,\n                    label: \"Apr 30, 11:30\"\n                },\n                {\n                    value: 232.01,\n                    label: \"Apr 30, 12:30\"\n                },\n                {\n                    value: 231.98,\n                    label: \"Apr 30, 13:30\"\n                },\n                {\n                    value: 231.33,\n                    label: \"Apr 30, 14:30\"\n                },\n                {\n                    value: 230.81,\n                    label: \"Apr 30, 15:30\"\n                },\n                {\n                    value: 235.79,\n                    label: \"May 03, 09:30\"\n                },\n                {\n                    value: 233.38,\n                    label: \"May 03, 10:30\"\n                },\n                {\n                    value: 235.01,\n                    label: \"May 03, 11:30\"\n                },\n                {\n                    value: 233.72,\n                    label: \"May 03, 12:30\"\n                },\n                {\n                    value: 232.01,\n                    label: \"May 03, 13:30\"\n                },\n                {\n                    value: 231.44,\n                    label: \"May 03, 14:30\"\n                },\n                {\n                    value: 230.76,\n                    label: \"May 03, 15:30\"\n                },\n                {\n                    value: 228.06,\n                    label: \"May 04, 09:30\"\n                },\n                {\n                    value: 226.63,\n                    label: \"May 04, 10:30\"\n                },\n                {\n                    value: 226.49,\n                    label: \"May 04, 11:30\"\n                },\n                {\n                    value: 226.89,\n                    label: \"May 04, 12:30\"\n                },\n                {\n                    value: 227.18,\n                    label: \"May 04, 13:30\"\n                },\n                {\n                    value: 227.25,\n                    label: \"May 04, 14:30\"\n                },\n                {\n                    value: 227.88,\n                    label: \"May 04, 15:30\"\n                },\n                {\n                    value: 227.38,\n                    label: \"May 05, 09:30\"\n                },\n                {\n                    value: 228.26,\n                    label: \"May 05, 10:30\"\n                },\n                {\n                    value: 228.15,\n                    label: \"May 05, 11:30\"\n                },\n                {\n                    value: 228.11,\n                    label: \"May 05, 12:30\"\n                },\n                {\n                    value: 227.99,\n                    label: \"May 05, 13:30\"\n                },\n                {\n                    value: 227.04,\n                    label: \"May 05, 14:30\"\n                },\n                {\n                    value: 226.75,\n                    label: \"May 05, 15:30\"\n                },\n                {\n                    value: 226.28,\n                    label: \"May 06, 09:30\"\n                },\n                {\n                    value: 226.46,\n                    label: \"May 06, 10:30\"\n                },\n                {\n                    value: 228.12,\n                    label: \"May 06, 11:30\"\n                },\n                {\n                    value: 226.7,\n                    label: \"May 06, 12:30\"\n                },\n                {\n                    value: 225.5,\n                    label: \"May 06, 13:30\"\n                },\n                {\n                    value: 225.93,\n                    label: \"May 06, 14:30\"\n                },\n                {\n                    value: 226.43,\n                    label: \"May 06, 15:30\"\n                },\n                {\n                    value: 228.01,\n                    label: \"May 07, 09:30\"\n                },\n                {\n                    value: 227.64,\n                    label: \"May 07, 10:30\"\n                },\n                {\n                    value: 226.42,\n                    label: \"May 07, 11:30\"\n                },\n                {\n                    value: 225.36,\n                    label: \"May 07, 12:30\"\n                },\n                {\n                    value: 225.49,\n                    label: \"May 07, 13:30\"\n                },\n                {\n                    value: 225.42,\n                    label: \"May 07, 14:30\"\n                },\n                {\n                    value: 225.32,\n                    label: \"May 07, 15:30\"\n                },\n                {\n                    value: 219.32,\n                    label: \"May 10, 09:30\"\n                },\n                {\n                    value: 219.76,\n                    label: \"May 10, 10:30\"\n                },\n                {\n                    value: 220.44,\n                    label: \"May 10, 11:30\"\n                },\n                {\n                    value: 220.5,\n                    label: \"May 10, 12:30\"\n                },\n                {\n                    value: 220.06,\n                    label: \"May 10, 13:30\"\n                },\n                {\n                    value: 219.85,\n                    label: \"May 10, 14:30\"\n                },\n                {\n                    value: 219.52,\n                    label: \"May 10, 15:30\"\n                },\n                {\n                    value: 216.12,\n                    label: \"May 11, 09:30\"\n                },\n                {\n                    value: 219.02,\n                    label: \"May 11, 10:30\"\n                },\n                {\n                    value: 218.58,\n                    label: \"May 11, 11:30\"\n                },\n                {\n                    value: 219.44,\n                    label: \"May 11, 12:30\"\n                },\n                {\n                    value: 220.7,\n                    label: \"May 11, 13:30\"\n                },\n                {\n                    value: 220.56,\n                    label: \"May 11, 14:30\"\n                },\n                {\n                    value: 221.38,\n                    label: \"May 11, 15:30\"\n                },\n                {\n                    value: 221.77,\n                    label: \"May 12, 09:30\"\n                },\n                {\n                    value: 220.85,\n                    label: \"May 12, 10:30\"\n                },\n                {\n                    value: 220.06,\n                    label: \"May 12, 11:30\"\n                },\n                {\n                    value: 220.43,\n                    label: \"May 12, 12:30\"\n                },\n                {\n                    value: 219.96,\n                    label: \"May 12, 13:30\"\n                },\n                {\n                    value: 219.94,\n                    label: \"May 12, 14:30\"\n                },\n                {\n                    value: 219.9,\n                    label: \"May 12, 15:30\"\n                },\n                {\n                    value: 211.6,\n                    label: \"May 13, 09:30\"\n                },\n                {\n                    value: 208.39,\n                    label: \"May 13, 10:30\"\n                },\n                {\n                    value: 209.29,\n                    label: \"May 13, 11:30\"\n                },\n                {\n                    value: 205.44,\n                    label: \"May 13, 12:30\"\n                },\n                {\n                    value: 205.29,\n                    label: \"May 13, 13:30\"\n                },\n                {\n                    value: 206.06,\n                    label: \"May 13, 14:30\"\n                },\n                {\n                    value: 206.06,\n                    label: \"May 13, 15:30\"\n                },\n                {\n                    value: 208.2,\n                    label: \"May 14, 09:30\"\n                },\n                {\n                    value: 208.98,\n                    label: \"May 14, 10:30\"\n                },\n                {\n                    value: 208.71,\n                    label: \"May 14, 11:30\"\n                },\n                {\n                    value: 208.55,\n                    label: \"May 14, 12:30\"\n                },\n                {\n                    value: 208.24,\n                    label: \"May 14, 13:30\"\n                },\n                {\n                    value: 209.2,\n                    label: \"May 14, 14:30\"\n                },\n                {\n                    value: 209.51,\n                    label: \"May 14, 15:30\"\n                },\n                {\n                    value: 211.59,\n                    label: \"May 17, 09:30\"\n                },\n                {\n                    value: 211.31,\n                    label: \"May 17, 10:30\"\n                },\n                {\n                    value: 210.53,\n                    label: \"May 17, 11:30\"\n                },\n                {\n                    value: 210.04,\n                    label: \"May 17, 12:30\"\n                },\n                {\n                    value: 210.04,\n                    label: \"May 17, 13:30\"\n                },\n                {\n                    value: 210.85,\n                    label: \"May 17, 14:30\"\n                },\n                {\n                    value: 211.26,\n                    label: \"May 17, 15:30\"\n                },\n                {\n                    value: 214.1,\n                    label: \"May 18, 09:30\"\n                },\n                {\n                    value: 214.98,\n                    label: \"May 18, 10:30\"\n                },\n                {\n                    value: 213.99,\n                    label: \"May 18, 11:30\"\n                },\n                {\n                    value: 213.94,\n                    label: \"May 18, 12:30\"\n                },\n                {\n                    value: 214.99,\n                    label: \"May 18, 13:30\"\n                },\n                {\n                    value: 214.71,\n                    label: \"May 18, 14:30\"\n                },\n                {\n                    value: 213.72,\n                    label: \"May 18, 15:30\"\n                },\n                {\n                    value: 211.5,\n                    label: \"May 19, 09:30\"\n                },\n                {\n                    value: 211.18,\n                    label: \"May 19, 10:30\"\n                },\n                {\n                    value: 211.33,\n                    label: \"May 19, 11:30\"\n                },\n                {\n                    value: 211.45,\n                    label: \"May 19, 12:30\"\n                },\n                {\n                    value: 211.46,\n                    label: \"May 19, 13:30\"\n                },\n                {\n                    value: 210.52,\n                    label: \"May 19, 14:30\"\n                },\n                {\n                    value: 212.54,\n                    label: \"May 19, 15:30\"\n                },\n                {\n                    value: 215.61,\n                    label: \"May 20, 09:30\"\n                },\n                {\n                    value: 216.29,\n                    label: \"May 20, 10:30\"\n                },\n                {\n                    value: 215.96,\n                    label: \"May 20, 11:30\"\n                },\n                {\n                    value: 217.01,\n                    label: \"May 20, 12:30\"\n                },\n                {\n                    value: 216.63,\n                    label: \"May 20, 13:30\"\n                },\n                {\n                    value: 216.88,\n                    label: \"May 20, 14:30\"\n                },\n                {\n                    value: 216.91,\n                    label: \"May 20, 15:30\"\n                },\n                {\n                    value: 211.92,\n                    label: \"May 21, 09:30\"\n                },\n                {\n                    value: 211.53,\n                    label: \"May 21, 10:30\"\n                },\n                {\n                    value: 210.51,\n                    label: \"May 21, 11:30\"\n                },\n                {\n                    value: 210.34,\n                    label: \"May 21, 12:30\"\n                },\n                {\n                    value: 210.37,\n                    label: \"May 21, 13:30\"\n                },\n                {\n                    value: 211.38,\n                    label: \"May 21, 14:30\"\n                },\n                {\n                    value: 211.09,\n                    label: \"May 21, 15:30\"\n                },\n                {\n                    value: 210.09,\n                    label: \"May 24, 09:30\"\n                },\n                {\n                    value: 211.16,\n                    label: \"May 24, 10:30\"\n                },\n                {\n                    value: 211.05,\n                    label: \"May 24, 11:30\"\n                },\n                {\n                    value: 211.47,\n                    label: \"May 24, 12:30\"\n                },\n                {\n                    value: 211.26,\n                    label: \"May 24, 13:30\"\n                },\n                {\n                    value: 210.62,\n                    label: \"May 24, 14:30\"\n                },\n                {\n                    value: 210.28,\n                    label: \"May 24, 15:30\"\n                },\n                {\n                    value: 212.81,\n                    label: \"May 25, 09:30\"\n                },\n                {\n                    value: 212.4,\n                    label: \"May 25, 10:30\"\n                },\n                {\n                    value: 212.29,\n                    label: \"May 25, 11:30\"\n                },\n                {\n                    value: 212.07,\n                    label: \"May 25, 12:30\"\n                },\n                {\n                    value: 211.99,\n                    label: \"May 25, 13:30\"\n                },\n                {\n                    value: 212.07,\n                    label: \"May 25, 13:59\"\n                }\n            ]\n        },\n        {\n            maxDataPoints: 50,\n            points: [\n                {\n                    value: 218.04,\n                    label: \"Jun 04 2020\"\n                },\n                {\n                    value: 220.72,\n                    label: \"Jun 09 2020\"\n                },\n                {\n                    value: 220.64,\n                    label: \"Jun 19 2020\"\n                },\n                {\n                    value: 226.22,\n                    label: \"Jun 24 2020\"\n                },\n                {\n                    value: 215.02,\n                    label: \"Jun 29 2020\"\n                },\n                {\n                    value: 261.58,\n                    label: \"Jul 09 2020\"\n                },\n                {\n                    value: 248.58,\n                    label: \"Jul 14 2020\"\n                },\n                {\n                    value: 249,\n                    label: \"Jul 24 2020\"\n                },\n                {\n                    value: 252.45,\n                    label: \"Jul 29 2020\"\n                },\n                {\n                    value: 257.94,\n                    label: \"Aug 03 2020\"\n                },\n                {\n                    value: 253.72,\n                    label: \"Aug 13 2020\"\n                },\n                {\n                    value: 259.2,\n                    label: \"Aug 18 2020\"\n                },\n                {\n                    value: 289,\n                    label: \"Aug 28 2020\"\n                },\n                {\n                    value: 296.07,\n                    label: \"Sep 02 2020\"\n                },\n                {\n                    value: 275.72,\n                    label: \"Sep 17 2020\"\n                },\n                {\n                    value: 275.29,\n                    label: \"Sep 22 2020\"\n                },\n                {\n                    value: 288.17,\n                    label: \"Oct 02 2020\"\n                },\n                {\n                    value: 296.5,\n                    label: \"Oct 07 2020\"\n                },\n                {\n                    value: 306.34,\n                    label: \"Oct 12 2020\"\n                },\n                {\n                    value: 306.28,\n                    label: \"Oct 22 2020\"\n                },\n                {\n                    value: 317.14,\n                    label: \"Oct 27 2020\"\n                },\n                {\n                    value: 299.95,\n                    label: \"Nov 06 2020\"\n                },\n                {\n                    value: 265.65,\n                    label: \"Nov 11 2020\"\n                },\n                {\n                    value: 258.31,\n                    label: \"Nov 16 2020\"\n                },\n                {\n                    value: 264.01,\n                    label: \"Dec 01 2020\"\n                },\n                {\n                    value: 264.54,\n                    label: \"Dec 11 2020\"\n                },\n                {\n                    value: 261.89,\n                    label: \"Dec 16 2020\"\n                },\n                {\n                    value: 260.43,\n                    label: \"Dec 21 2020\"\n                },\n                {\n                    value: 232.73,\n                    label: \"Dec 31 2020\"\n                },\n                {\n                    value: 240.4,\n                    label: \"Jan 05 2021\"\n                },\n                {\n                    value: 243.46,\n                    label: \"Jan 15 2021\"\n                },\n                {\n                    value: 265.49,\n                    label: \"Jan 20 2021\"\n                },\n                {\n                    value: 261.38,\n                    label: \"Jan 25 2021\"\n                },\n                {\n                    value: 266.96,\n                    label: \"Feb 04 2021\"\n                },\n                {\n                    value: 266.49,\n                    label: \"Feb 09 2021\"\n                },\n                {\n                    value: 263.59,\n                    label: \"Feb 19 2021\"\n                },\n                {\n                    value: 250.34,\n                    label: \"Feb 24 2021\"\n                },\n                {\n                    value: 241.69,\n                    label: \"Mar 01 2021\"\n                },\n                {\n                    value: 240.8,\n                    label: \"Mar 11 2021\"\n                },\n                {\n                    value: 226.93,\n                    label: \"Mar 16 2021\"\n                },\n                {\n                    value: 227.26,\n                    label: \"Mar 26 2021\"\n                },\n                {\n                    value: 226.73,\n                    label: \"Mar 31 2021\"\n                },\n                {\n                    value: 225.3,\n                    label: \"Apr 05 2021\"\n                },\n                {\n                    value: 239.09,\n                    label: \"Apr 15 2021\"\n                },\n                {\n                    value: 229.88,\n                    label: \"Apr 20 2021\"\n                },\n                {\n                    value: 230.95,\n                    label: \"Apr 30 2021\"\n                },\n                {\n                    value: 226.78,\n                    label: \"May 05 2021\"\n                },\n                {\n                    value: 219.53,\n                    label: \"May 10 2021\"\n                },\n                {\n                    value: 216.99,\n                    label: \"May 20 2021\"\n                },\n                {\n                    value: 212.07,\n                    label: \"May 25 2021\"\n                }\n            ]\n        }\n    ],\n    header: {\n        currentValue: {\n            display: true,\n            update: true\n        },\n        percentageChange: {\n            display: true\n        },\n        labels: {\n            display: true,\n            update: true\n        }\n    },\n    cursor: {\n        display: true,\n        lineColor: \"black\",\n        cursorColor: \"black\"\n    },\n    partialGraph: true,\n    title: \"BABA\",\n    graphColor: \"rgb(255 80 0)\"\n};\n","import React from \"react\";\nimport Chart from \"lean-chart\";\nimport \"lean-chart/dist/index.css\";\nimport { data } from \"./graphData\";\n\nconst App = () => {\n    // return <Chart width={700} height={200} data={data} />;\n    return (\n        <Chart width={700} height={200} data={data}>\n            {(headerData) => (\n                <div>\n                    {headerData.title} - {headerData.dataPointValue}\n                </div>\n            )}\n        </Chart>\n    );\n};\n\nexport default App;\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}